(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Random, converted to v2.6 by CVC4
Application: Regressions for datatypes decision procedure.
Target solver: CVC3
Publications: "An Abstract Decision Procedure for Satisfiability in the Theory of Inductive Data Types" by Clark Barrett, Igor Shikanian, and Cesare Tinelli, Journal on Satisfiability, Boolean Modeling and Computation 2007.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unsat)


(declare-datatypes ((nat 0)(list 0)(tree 0)) (((succ (pred nat)) (zero))
((cons (car tree) (cdr list)) (null))
((node (children list)) (leaf (data nat)))
))
(declare-fun x1 () nat)
(declare-fun x2 () list)
(declare-fun x3 () tree)

(assert (and (and (and (and (and (and (and (and (= (succ (data (car x2))) (data (node x2))) (= (cdr (cons (car x2) (cons (leaf (pred (succ x1))) (children (leaf (succ (succ (pred zero)))))))) x2)) (not (is-leaf (leaf (data x3))))) (not ((_ is null) (cons x3 (cons (node null) (cons (node (cons x3 x2)) (children (car (cons (car x2) null))))))))) ((_ is zero) (succ (succ zero)))) (= x1 (succ (succ (pred (data x3)))))) (= x2 x2)) (= (node (children (car (cdr (cons (leaf (data (car (cdr (cons (node null) (children (leaf (pred (succ (data (node (cdr x2)))))))))))) (children (car (cdr (cons x3 (cons (node (children (node x2))) x2)))))))))) (leaf x1))) ((_ is cons) (cdr (children (leaf (succ (data (car (children x3))))))))))
(check-sat)
(exit)


