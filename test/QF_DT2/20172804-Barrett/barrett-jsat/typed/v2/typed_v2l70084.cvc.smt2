(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Random, converted to v2.6 by CVC4
Application: Regressions for datatypes decision procedure.
Target solver: CVC3
Publications: "An Abstract Decision Procedure for Satisfiability in the Theory of Inductive Data Types" by Clark Barrett, Igor Shikanian, and Cesare Tinelli, Journal on Satisfiability, Boolean Modeling and Computation 2007.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unsat)


(declare-datatypes ((nat 0)(list 0)(tree 0)) (((succ (pred nat)) (zero))
((cons (car tree) (cdr list)) (null))
((node (children list)) (leaf (data nat)))
))
(declare-fun x1 () nat)
(declare-fun x2 () nat)
(declare-fun x3 () list)
(declare-fun x4 () list)
(declare-fun x5 () tree)
(declare-fun x6 () tree)

(assert (and (and (and (and (and (and (not ((_ is node) (ite (is-cons (ite ((_ is node) (node (ite ((_ is node) x6) (children x6) null))) (children (node (ite ((_ is node) x6) (children x6) null))) null)) (car (ite ((_ is node) (node (ite ((_ is node) x6) (children x6) null))) (children (node (ite ((_ is node) x6) (children x6) null))) null)) (leaf zero)))) ((_ is null) (ite (is-cons (ite (is-cons (cons x5 x3)) (cdr (cons x5 x3)) null)) (cdr (ite (is-cons (cons x5 x3)) (cdr (cons x5 x3)) null)) null))) (not (is-cons (ite (is-cons null) (cdr null) null)))) (not (= (succ (ite ((_ is succ) x1) (pred x1) zero)) (succ (ite ((_ is leaf) x5) (data x5) zero))))) (not (= (cons x6 null) (ite (is-cons (ite (is-cons (cons (node (ite ((_ is node) x6) (children x6) null)) x3)) (cdr (cons (node (ite ((_ is node) x6) (children x6) null)) x3)) null)) (cdr (ite (is-cons (cons (node (ite ((_ is node) x6) (children x6) null)) x3)) (cdr (cons (node (ite ((_ is node) x6) (children x6) null)) x3)) null)) null)))) (not (is-cons x4))) ((_ is zero) (succ (ite ((_ is leaf) (leaf (succ x2))) (data (leaf (succ x2))) zero)))))
(check-sat)
(exit)


