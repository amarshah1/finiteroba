(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Random, converted to v2.6 by CVC4
Application: Regressions for datatypes decision procedure.
Target solver: CVC3
Publications: "An Abstract Decision Procedure for Satisfiability in the Theory of Inductive Data Types" by Clark Barrett, Igor Shikanian, and Cesare Tinelli, Journal on Satisfiability, Boolean Modeling and Computation 2007.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unsat)


(declare-datatypes ((nat 0)(list 0)(tree 0)) (((succ (pred nat)) (zero))
((cons (car tree) (cdr list)) (null))
((node (children list)) (leaf (data nat)))
))
(declare-fun x1 () nat)
(declare-fun x2 () nat)
(declare-fun x3 () list)
(declare-fun x4 () list)
(declare-fun x5 () tree)
(declare-fun x6 () tree)

(assert (and (and (and (and (and (and (is-cons (ite (is-cons x4) (cdr x4) null)) ((_ is null) x4)) (= x6 x6)) (not (= x4 x3))) (= (ite ((_ is node) (leaf zero)) (children (leaf zero)) null) null)) (not (is-cons (cons (node (cons (leaf (succ (ite ((_ is leaf) (node (ite ((_ is node) (node (ite (is-cons x4) (cdr x4) null))) (children (node (ite (is-cons x4) (cdr x4) null))) null))) (data (node (ite ((_ is node) (node (ite (is-cons x4) (cdr x4) null))) (children (node (ite (is-cons x4) (cdr x4) null))) null))) zero))) null)) (ite ((_ is node) (leaf x2)) (children (leaf x2)) null))))) (not (= (ite ((_ is node) x5) (children x5) null) (ite (is-cons (cons (leaf zero) x3)) (cdr (cons (leaf zero) x3)) null)))))
(check-sat)
(exit)


