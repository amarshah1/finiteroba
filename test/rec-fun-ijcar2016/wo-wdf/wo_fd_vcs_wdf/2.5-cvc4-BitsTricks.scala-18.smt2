(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-fun isRotationLeft!238 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun bitAt!206 ((_ BitVec 32) (_ BitVec 32)) Bool)
(declare-sort I_isRotationLeft!238 0)
(declare-fun isRotationLeft!238_arg_0_1 (I_isRotationLeft!238) (_ BitVec 32))
(declare-fun isRotationLeft!238_arg_1_2 (I_isRotationLeft!238) (_ BitVec 32))
(declare-fun isRotationLeft!238_arg_2_3 (I_isRotationLeft!238) (_ BitVec 32))
(declare-fun isRotationLeft!238_arg_3_4 (I_isRotationLeft!238) (_ BitVec 32))
(declare-sort I_bitAt!206 0)
(declare-fun bitAt!206_arg_0_5 (I_bitAt!206) (_ BitVec 32))
(declare-fun bitAt!206_arg_1_6 (I_bitAt!206) (_ BitVec 32))
(assert (forall ((?i I_isRotationLeft!238)) (and (= (isRotationLeft!238 (isRotationLeft!238_arg_0_1 ?i) (isRotationLeft!238_arg_1_2 ?i) (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i)) (ite (= (isRotationLeft!238_arg_3_4 ?i) (_ bv32 32)) true (and (isRotationLeft!238 (isRotationLeft!238_arg_0_1 ?i) (isRotationLeft!238_arg_1_2 ?i) (isRotationLeft!238_arg_2_3 ?i) (bvadd (isRotationLeft!238_arg_3_4 ?i) (_ bv1 32))) (= (bitAt!206 (isRotationLeft!238_arg_0_1 ?i) (isRotationLeft!238_arg_3_4 ?i)) (bitAt!206 (isRotationLeft!238_arg_1_2 ?i) (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvneg (bvurem (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvadd (bvneg (isRotationLeft!238_arg_2_3 ?i)) (bvneg (isRotationLeft!238_arg_3_4 ?i))) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv32 32))) (bvurem (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvadd (bvneg (isRotationLeft!238_arg_2_3 ?i)) (bvneg (isRotationLeft!238_arg_3_4 ?i))) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv32 32)))))))) (ite (= (isRotationLeft!238_arg_3_4 ?i) (_ bv32 32)) true (and (not (forall ((?z I_isRotationLeft!238)) (not (and (= (isRotationLeft!238_arg_0_1 ?z) (isRotationLeft!238_arg_0_1 ?i)) (= (isRotationLeft!238_arg_1_2 ?z) (isRotationLeft!238_arg_1_2 ?i)) (= (isRotationLeft!238_arg_2_3 ?z) (isRotationLeft!238_arg_2_3 ?i)) (= (isRotationLeft!238_arg_3_4 ?z) (bvadd (isRotationLeft!238_arg_3_4 ?i) (_ bv1 32))))) )) (not (forall ((?z I_bitAt!206)) (not (and (= (bitAt!206_arg_0_5 ?z) (isRotationLeft!238_arg_0_1 ?i)) (= (bitAt!206_arg_1_6 ?z) (isRotationLeft!238_arg_3_4 ?i)))) )) (not (forall ((?z I_bitAt!206)) (not (and (= (bitAt!206_arg_0_5 ?z) (isRotationLeft!238_arg_1_2 ?i)) (= (bitAt!206_arg_1_6 ?z) (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvneg (bvurem (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvadd (bvneg (isRotationLeft!238_arg_2_3 ?i)) (bvneg (isRotationLeft!238_arg_3_4 ?i))) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv32 32))) (bvurem (ite (= ((_ extract 31 31) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv1 1)) (bvadd (bvneg (isRotationLeft!238_arg_2_3 ?i)) (bvneg (isRotationLeft!238_arg_3_4 ?i))) (bvadd (isRotationLeft!238_arg_2_3 ?i) (isRotationLeft!238_arg_3_4 ?i))) (_ bv32 32)))))) ))))) ))
(assert (forall ((?i I_bitAt!206)) (= (bitAt!206 (bitAt!206_arg_0_5 ?i) (bitAt!206_arg_1_6 ?i)) (= (concat (_ bv0 31) ((_ extract 0 0) (bvashr (bitAt!206_arg_0_5 ?i) (bitAt!206_arg_1_6 ?i)))) (_ bv1 32))) ))
(assert (exists ((n!240 (_ BitVec 32)) (x!239 (_ BitVec 32))) (not (=> (and (and (bvsge n!240 (_ bv0 32)) (bvsge n!240 (_ bv0 32))) (bvslt n!240 (_ bv32 32))) (or (isRotationLeft!238 x!239 (bvor (bvshl x!239 n!240) (bvlshr x!239 (bvsub (_ bv32 32) n!240))) n!240 (_ bv0 32)) (forall ((?z I_isRotationLeft!238)) (not (and (= (isRotationLeft!238_arg_0_1 ?z) x!239) (= (isRotationLeft!238_arg_1_2 ?z) (bvor (bvshl x!239 n!240) (bvlshr x!239 (bvsub (_ bv32 32) n!240)))) (= (isRotationLeft!238_arg_2_3 ?z) n!240) (= (isRotationLeft!238_arg_3_4 ?z) (_ bv0 32)))) )))) ))
(check-sat)
(exit)

