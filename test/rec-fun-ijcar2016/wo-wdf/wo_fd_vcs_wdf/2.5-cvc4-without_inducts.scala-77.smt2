(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Lst!2209 0)(Nat!2214 0)) (((cons!2210 (head!2211 Nat!2214) (tail!2212 Lst!2209)) (nil!2213))
((succ!2215 (pred!2216 Nat!2214)) (zero!2217))
))
(declare-datatypes ((ZLst!2218 0)(Pair!2223 0)) (((zcons!2219 (zhead!2220 Pair!2223) (ztail!2221 ZLst!2218)) (znil!2222))
((mkpair!2224 (first!2225 Nat!2214) (second!2226 Nat!2214)))
))
(declare-fun error_value!2227 () ZLst!2218)
(declare-fun zip!288 (Lst!2209 Lst!2209) ZLst!2218)
(declare-sort I_zip!288 0)
(declare-fun zip!288_arg_0_1 (I_zip!288) Lst!2209)
(declare-fun zip!288_arg_1_2 (I_zip!288) Lst!2209)
(assert (forall ((?i I_zip!288)) (and (= (zip!288 (zip!288_arg_0_1 ?i) (zip!288_arg_1_2 ?i)) (ite ((_ is nil!2213) (zip!288_arg_0_1 ?i)) znil!2222 (ite ((_ is nil!2213) (zip!288_arg_1_2 ?i)) znil!2222 (ite (and ((_ is cons!2210) (zip!288_arg_1_2 ?i)) ((_ is cons!2210) (zip!288_arg_0_1 ?i))) (zcons!2219 (mkpair!2224 (head!2211 (zip!288_arg_0_1 ?i)) (head!2211 (zip!288_arg_1_2 ?i))) (zip!288 (tail!2212 (zip!288_arg_0_1 ?i)) (tail!2212 (zip!288_arg_1_2 ?i)))) error_value!2227)))) (ite ((_ is nil!2213) (zip!288_arg_0_1 ?i)) true (ite ((_ is nil!2213) (zip!288_arg_1_2 ?i)) true (ite (and ((_ is cons!2210) (zip!288_arg_1_2 ?i)) ((_ is cons!2210) (zip!288_arg_0_1 ?i))) (not (forall ((?z I_zip!288)) (not (and (= (zip!288_arg_0_1 ?z) (tail!2212 (zip!288_arg_0_1 ?i))) (= (zip!288_arg_1_2 ?z) (tail!2212 (zip!288_arg_1_2 ?i))))) )) true)))) ))
(assert (exists ((ys!431 Lst!2209)) (not (or (= (zip!288 nil!2213 ys!431) znil!2222) (forall ((?z I_zip!288)) (not (and (= (zip!288_arg_0_1 ?z) nil!2213) (= (zip!288_arg_1_2 ?z) ys!431))) ))) ))
(check-sat)
(exit)

