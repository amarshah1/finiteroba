(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!1044 0)) (((Cons!1045 (head!1046 (_ BitVec 32)) (tail!1047 List!1044)) (Nil!1048))
))
(declare-fun error_value!1049 () Int)
(declare-fun error_value!1050 () Int)
(declare-fun sizeTailRecAcc!217 (List!1044 Int) Int)
(declare-fun size!206 (List!1044) Int)
(declare-fun error_value!1051 () Int)
(declare-sort I_sizeTailRecAcc!217 0)
(declare-fun sizeTailRecAcc!217_arg_0_1 (I_sizeTailRecAcc!217) List!1044)
(declare-fun sizeTailRecAcc!217_arg_1_2 (I_sizeTailRecAcc!217) Int)
(declare-sort I_size!206 0)
(declare-fun size!206_arg_0_3 (I_size!206) List!1044)
(assert (forall ((?i I_sizeTailRecAcc!217)) (and (= (sizeTailRecAcc!217 (sizeTailRecAcc!217_arg_0_1 ?i) (sizeTailRecAcc!217_arg_1_2 ?i)) (ite ((_ is Nil!1048) (sizeTailRecAcc!217_arg_0_1 ?i)) (sizeTailRecAcc!217_arg_1_2 ?i) (ite ((_ is Cons!1045) (sizeTailRecAcc!217_arg_0_1 ?i)) (sizeTailRecAcc!217 (tail!1047 (sizeTailRecAcc!217_arg_0_1 ?i)) (+ 1 (sizeTailRecAcc!217_arg_1_2 ?i))) error_value!1049))) (ite ((_ is Nil!1048) (sizeTailRecAcc!217_arg_0_1 ?i)) true (ite ((_ is Cons!1045) (sizeTailRecAcc!217_arg_0_1 ?i)) (not (forall ((?z I_sizeTailRecAcc!217)) (not (and (= (sizeTailRecAcc!217_arg_0_1 ?z) (tail!1047 (sizeTailRecAcc!217_arg_0_1 ?i))) (= (sizeTailRecAcc!217_arg_1_2 ?z) (+ 1 (sizeTailRecAcc!217_arg_1_2 ?i))))) )) true))) ))
(assert (forall ((?i I_size!206)) (and (= (size!206 (size!206_arg_0_3 ?i)) (ite ((_ is Nil!1048) (size!206_arg_0_3 ?i)) 0 (ite ((_ is Cons!1045) (size!206_arg_0_3 ?i)) (+ 1 (size!206 (tail!1047 (size!206_arg_0_3 ?i)))) error_value!1050))) (ite ((_ is Nil!1048) (size!206_arg_0_3 ?i)) true (ite ((_ is Cons!1045) (size!206_arg_0_3 ?i)) (not (forall ((?z I_size!206)) (not (= (size!206_arg_0_3 ?z) (tail!1047 (size!206_arg_0_3 ?i)))) )) true))) ))
(assert (exists ((acc!216 Int) (l!215 List!1044)) (not (=> (>= acc!216 (- 0)) (or (= (ite ((_ is Nil!1048) l!215) acc!216 (ite ((_ is Cons!1045) l!215) (sizeTailRecAcc!217 (tail!1047 l!215) (+ acc!216 1)) error_value!1051)) (+ (size!206 l!215) acc!216)) (not (ite ((_ is Nil!1048) l!215) true (ite ((_ is Cons!1045) l!215) (not (forall ((?z I_sizeTailRecAcc!217)) (not (and (= (sizeTailRecAcc!217_arg_0_1 ?z) (tail!1047 l!215)) (= (sizeTailRecAcc!217_arg_1_2 ?z) (+ acc!216 1)))) )) true))) (forall ((?z I_size!206)) (not (= (size!206_arg_0_3 ?z) l!215)) )))) ))
(check-sat)
(exit)

