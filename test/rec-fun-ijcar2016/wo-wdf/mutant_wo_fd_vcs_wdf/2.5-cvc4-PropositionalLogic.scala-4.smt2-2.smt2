(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Formula!989 0)) (((And!990 (lhs!991 Formula!989) (rhs!992 Formula!989)) (Implies!993 (lhs!994 Formula!989) (rhs!995 Formula!989)) (Literal!996 (id!997 (_ BitVec 32))) (Not!998 (f!999 Formula!989)) (Or!1000 (lhs!1001 Formula!989) (rhs!1002 Formula!989)))
))
(declare-fun error_value!1003 () Bool)
(declare-fun isNNF!212 (Formula!989) Bool)
(declare-fun error_value!1004 () Formula!989)
(declare-fun nnf!210 (Formula!989) Formula!989)
(declare-fun error_value!1005 () Formula!989)
(declare-sort I_isNNF!212 0)
(declare-fun isNNF!212_arg_0_1 (I_isNNF!212) Formula!989)
(declare-sort I_nnf!210 0)
(declare-fun nnf!210_arg_0_2 (I_nnf!210) Formula!989)
(assert (forall ((?i I_isNNF!212)) (and (= (isNNF!212 (isNNF!212_arg_0_1 ?i)) (ite ((_ is And!990) (isNNF!212_arg_0_1 ?i)) (and (isNNF!212 (rhs!992 (isNNF!212_arg_0_1 ?i))) (isNNF!212 (lhs!991 (isNNF!212_arg_0_1 ?i)))) (ite ((_ is Or!1000) (isNNF!212_arg_0_1 ?i)) (and (isNNF!212 (rhs!1002 (isNNF!212_arg_0_1 ?i))) (isNNF!212 (lhs!1001 (isNNF!212_arg_0_1 ?i)))) (ite ((_ is Implies!993) (isNNF!212_arg_0_1 ?i)) (and (isNNF!212 (rhs!995 (isNNF!212_arg_0_1 ?i))) (isNNF!212 (lhs!994 (isNNF!212_arg_0_1 ?i)))) (ite (and ((_ is Literal!996) (f!999 (isNNF!212_arg_0_1 ?i))) ((_ is Not!998) (isNNF!212_arg_0_1 ?i))) true (ite ((_ is Not!998) (isNNF!212_arg_0_1 ?i)) false (ite ((_ is Literal!996) (isNNF!212_arg_0_1 ?i)) true error_value!1003))))))) (ite ((_ is And!990) (isNNF!212_arg_0_1 ?i)) (and (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (rhs!992 (isNNF!212_arg_0_1 ?i)))) )) (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (lhs!991 (isNNF!212_arg_0_1 ?i)))) ))) (ite ((_ is Or!1000) (isNNF!212_arg_0_1 ?i)) (and (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (rhs!1002 (isNNF!212_arg_0_1 ?i)))) )) (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (lhs!1001 (isNNF!212_arg_0_1 ?i)))) ))) (ite ((_ is Implies!993) (isNNF!212_arg_0_1 ?i)) (and (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (rhs!995 (isNNF!212_arg_0_1 ?i)))) )) (not (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (lhs!994 (isNNF!212_arg_0_1 ?i)))) ))) true)))) ))
(assert (forall ((?i I_nnf!210)) (and (= (nnf!210 (nnf!210_arg_0_2 ?i)) (ite ((_ is And!990) (nnf!210_arg_0_2 ?i)) (And!990 (nnf!210 (lhs!991 (nnf!210_arg_0_2 ?i))) (nnf!210 (rhs!992 (nnf!210_arg_0_2 ?i)))) (ite ((_ is Or!1000) (nnf!210_arg_0_2 ?i)) (Or!1000 (nnf!210 (lhs!1001 (nnf!210_arg_0_2 ?i))) (nnf!210 (rhs!1002 (nnf!210_arg_0_2 ?i)))) (ite ((_ is Implies!993) (nnf!210_arg_0_2 ?i)) (Implies!993 (nnf!210 (lhs!994 (nnf!210_arg_0_2 ?i))) (nnf!210 (rhs!995 (nnf!210_arg_0_2 ?i)))) (ite (and ((_ is And!990) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (Or!1000 (nnf!210 (Not!998 (lhs!991 (f!999 (nnf!210_arg_0_2 ?i))))) (nnf!210 (Not!998 (rhs!992 (f!999 (nnf!210_arg_0_2 ?i)))))) (ite (and ((_ is Or!1000) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (And!990 (nnf!210 (Not!998 (lhs!1001 (f!999 (nnf!210_arg_0_2 ?i))))) (nnf!210 (Not!998 (rhs!1002 (f!999 (nnf!210_arg_0_2 ?i)))))) (ite (and ((_ is Implies!993) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (And!990 (nnf!210 (lhs!994 (f!999 (nnf!210_arg_0_2 ?i)))) (nnf!210 (Not!998 (rhs!995 (f!999 (nnf!210_arg_0_2 ?i)))))) (ite (and ((_ is Not!998) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (nnf!210 (f!999 (f!999 (nnf!210_arg_0_2 ?i)))) (ite (and ((_ is Literal!996) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (nnf!210_arg_0_2 ?i) (ite ((_ is Literal!996) (nnf!210_arg_0_2 ?i)) (nnf!210_arg_0_2 ?i) error_value!1004)))))))))) (ite ((_ is And!990) (nnf!210_arg_0_2 ?i)) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!991 (nnf!210_arg_0_2 ?i)))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (rhs!992 (nnf!210_arg_0_2 ?i)))) ))) (ite ((_ is Or!1000) (nnf!210_arg_0_2 ?i)) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!1001 (nnf!210_arg_0_2 ?i)))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (rhs!1002 (nnf!210_arg_0_2 ?i)))) ))) (ite ((_ is Implies!993) (nnf!210_arg_0_2 ?i)) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!994 (nnf!210_arg_0_2 ?i)))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (rhs!995 (nnf!210_arg_0_2 ?i)))) ))) (ite (and ((_ is And!990) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (lhs!991 (f!999 (nnf!210_arg_0_2 ?i)))))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!992 (f!999 (nnf!210_arg_0_2 ?i)))))) ))) (ite (and ((_ is Or!1000) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (lhs!1001 (f!999 (nnf!210_arg_0_2 ?i)))))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!1002 (f!999 (nnf!210_arg_0_2 ?i)))))) ))) (ite (and ((_ is Implies!993) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!994 (f!999 (nnf!210_arg_0_2 ?i))))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!995 (f!999 (nnf!210_arg_0_2 ?i)))))) ))) (ite (and ((_ is Not!998) (f!999 (nnf!210_arg_0_2 ?i))) ((_ is Not!998) (nnf!210_arg_0_2 ?i))) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (f!999 (f!999 (nnf!210_arg_0_2 ?i))))) )) true)))))))) ))
(assert (not (forall ((formula!209 Formula!989)) (or (isNNF!212 (ite ((_ is And!990) formula!209) (And!990 (nnf!210 (lhs!991 formula!209)) (nnf!210 (rhs!992 formula!209))) (ite ((_ is Or!1000) formula!209) (Or!1000 (nnf!210 (lhs!1001 formula!209)) (nnf!210 (rhs!1002 formula!209))) (ite ((_ is Implies!993) formula!209) (Implies!993 (nnf!210 (lhs!994 formula!209)) (nnf!210 (nnf!210 (Not!998 (rhs!1002 (f!999 formula!209)))))) (ite (and ((_ is And!990) (f!999 formula!209)) ((_ is Not!998) formula!209)) (Or!1000 (nnf!210 (Not!998 (lhs!991 (f!999 formula!209)))) (nnf!210 (Not!998 (rhs!992 (f!999 formula!209))))) (ite (and ((_ is Or!1000) (f!999 formula!209)) ((_ is Not!998) formula!209)) (And!990 (nnf!210 (Not!998 (lhs!1001 (f!999 formula!209)))) (rhs!995 formula!209)) (ite (and ((_ is Implies!993) (f!999 formula!209)) ((_ is Not!998) formula!209)) (And!990 (nnf!210 (lhs!994 (f!999 formula!209))) (nnf!210 (Not!998 (rhs!995 (f!999 formula!209))))) (ite (and ((_ is Not!998) (f!999 formula!209)) ((_ is Not!998) formula!209)) (nnf!210 (f!999 (f!999 formula!209))) (ite (and ((_ is Literal!996) (f!999 formula!209)) ((_ is Not!998) formula!209)) formula!209 (ite ((_ is Literal!996) formula!209) formula!209 error_value!1005)))))))))) (forall ((?z I_isNNF!212)) (not (= (isNNF!212_arg_0_1 ?z) (ite ((_ is And!990) formula!209) (And!990 (nnf!210 (lhs!991 formula!209)) (nnf!210 (rhs!992 formula!209))) (ite ((_ is Or!1000) formula!209) (Or!1000 (nnf!210 (lhs!1001 formula!209)) (nnf!210 (rhs!1002 formula!209))) (ite ((_ is Implies!993) formula!209) (Implies!993 (nnf!210 (lhs!994 formula!209)) (nnf!210 (nnf!210 (Not!998 (rhs!1002 (f!999 formula!209)))))) (ite (and ((_ is And!990) (f!999 formula!209)) ((_ is Not!998) formula!209)) (Or!1000 (nnf!210 (Not!998 (lhs!991 (f!999 formula!209)))) (nnf!210 (Not!998 (rhs!992 (f!999 formula!209))))) (ite (and ((_ is Or!1000) (f!999 formula!209)) ((_ is Not!998) formula!209)) (And!990 (nnf!210 (Not!998 (lhs!1001 (f!999 formula!209)))) (rhs!995 formula!209)) (ite (and ((_ is Implies!993) (f!999 formula!209)) ((_ is Not!998) formula!209)) (And!990 (nnf!210 (lhs!994 (f!999 formula!209))) (nnf!210 (Not!998 (rhs!995 (f!999 formula!209))))) (ite (and ((_ is Not!998) (f!999 formula!209)) ((_ is Not!998) formula!209)) (nnf!210 (f!999 (f!999 formula!209))) (ite (and ((_ is Literal!996) (f!999 formula!209)) ((_ is Not!998) formula!209)) formula!209 (ite ((_ is Literal!996) formula!209) formula!209 error_value!1005))))))))))) ) (not (ite ((_ is And!990) formula!209) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!991 formula!209))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (rhs!992 formula!209))) ))) (ite ((_ is Or!1000) formula!209) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!1001 formula!209))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (rhs!1002 formula!209))) ))) (ite ((_ is Implies!993) formula!209) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!994 formula!209))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (nnf!210 (Not!998 (rhs!1002 (f!999 formula!209)))))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!1002 (f!999 formula!209))))) ))) (ite (and ((_ is And!990) (f!999 formula!209)) ((_ is Not!998) formula!209)) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (lhs!991 (f!999 formula!209))))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!992 (f!999 formula!209))))) ))) (ite (and ((_ is Or!1000) (f!999 formula!209)) ((_ is Not!998) formula!209)) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (lhs!1001 (f!999 formula!209))))) )) (ite (and ((_ is Implies!993) (f!999 formula!209)) ((_ is Not!998) formula!209)) (and (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (lhs!994 (f!999 formula!209)))) )) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (Not!998 (rhs!995 (f!999 formula!209))))) ))) (ite (and ((_ is Not!998) (f!999 formula!209)) ((_ is Not!998) formula!209)) (not (forall ((?z I_nnf!210)) (not (= (nnf!210_arg_0_2 ?z) (f!999 (f!999 formula!209)))) )) true))))))))) )))
(check-sat)
(exit)

