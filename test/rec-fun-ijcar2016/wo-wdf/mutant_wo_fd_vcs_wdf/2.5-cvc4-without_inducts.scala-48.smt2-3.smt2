(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!1938 0)) (((succ!1939 (pred!1940 Nat!1938)) (zero!1941))
))
(declare-datatypes ((Lst!1942 0)) (((cons!1943 (head!1944 Nat!1938) (tail!1945 Lst!1942)) (nil!1946))
))
(declare-fun error_value!1947 () Nat!1938)
(declare-fun len!254 (Lst!1942) Nat!1938)
(declare-fun error_value!1948 () Lst!1942)
(declare-fun error_value!1949 () Bool)
(declare-fun insort!281 (Nat!1938 Lst!1942) Lst!1942)
(declare-fun less!231 (Nat!1938 Nat!1938) Bool)
(declare-sort I_len!254 0)
(declare-fun len!254_arg_0_1 (I_len!254) Lst!1942)
(declare-sort I_insort!281 0)
(declare-fun insort!281_arg_0_2 (I_insort!281) Nat!1938)
(declare-fun insort!281_arg_1_3 (I_insort!281) Lst!1942)
(declare-sort I_less!231 0)
(declare-fun less!231_arg_0_4 (I_less!231) Nat!1938)
(declare-fun less!231_arg_1_5 (I_less!231) Nat!1938)
(assert (forall ((?i I_len!254)) (and (= (len!254 (len!254_arg_0_1 ?i)) (ite ((_ is nil!1946) (len!254_arg_0_1 ?i)) zero!1941 (ite ((_ is cons!1943) (len!254_arg_0_1 ?i)) (succ!1939 (len!254 (tail!1945 (len!254_arg_0_1 ?i)))) error_value!1947))) (ite ((_ is nil!1946) (len!254_arg_0_1 ?i)) true (ite ((_ is cons!1943) (len!254_arg_0_1 ?i)) (not (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) (tail!1945 (len!254_arg_0_1 ?i)))) )) true))) ))
(assert (forall ((?i I_insort!281)) (and (= (insort!281 (insort!281_arg_0_2 ?i) (insort!281_arg_1_3 ?i)) (ite ((_ is nil!1946) (insort!281_arg_1_3 ?i)) (cons!1943 (insort!281_arg_0_2 ?i) nil!1946) (ite ((_ is cons!1943) (insort!281_arg_1_3 ?i)) (ite (less!231 (insort!281_arg_0_2 ?i) (head!1944 (insort!281_arg_1_3 ?i))) (cons!1943 (insort!281_arg_0_2 ?i) (cons!1943 (head!1944 (insort!281_arg_1_3 ?i)) (tail!1945 (insort!281_arg_1_3 ?i)))) (cons!1943 (head!1944 (insort!281_arg_1_3 ?i)) (insort!281 (insort!281_arg_0_2 ?i) (tail!1945 (insort!281_arg_1_3 ?i))))) error_value!1948))) (ite ((_ is nil!1946) (insort!281_arg_1_3 ?i)) true (ite ((_ is cons!1943) (insort!281_arg_1_3 ?i)) (and (not (forall ((?z I_less!231)) (not (and (= (less!231_arg_0_4 ?z) (insort!281_arg_0_2 ?i)) (= (less!231_arg_1_5 ?z) (head!1944 (insort!281_arg_1_3 ?i))))) )) (ite (less!231 (insort!281_arg_0_2 ?i) (head!1944 (insort!281_arg_1_3 ?i))) true (not (forall ((?z I_insort!281)) (not (and (= (insort!281_arg_0_2 ?z) (insort!281_arg_0_2 ?i)) (= (insort!281_arg_1_3 ?z) (tail!1945 (insort!281_arg_1_3 ?i))))) )))) true))) ))
(assert (forall ((?i I_less!231)) (and (= (less!231 (less!231_arg_0_4 ?i) (less!231_arg_1_5 ?i)) (ite ((_ is zero!1941) (less!231_arg_1_5 ?i)) false (ite (and ((_ is succ!1939) (less!231_arg_1_5 ?i)) ((_ is zero!1941) (less!231_arg_0_4 ?i))) true (ite (and ((_ is succ!1939) (less!231_arg_1_5 ?i)) ((_ is succ!1939) (less!231_arg_0_4 ?i))) (less!231 (pred!1940 (less!231_arg_0_4 ?i)) (pred!1940 (less!231_arg_1_5 ?i))) error_value!1949)))) (ite ((_ is zero!1941) (less!231_arg_1_5 ?i)) true (ite (and ((_ is succ!1939) (less!231_arg_1_5 ?i)) ((_ is zero!1941) (less!231_arg_0_4 ?i))) true (ite (and ((_ is succ!1939) (less!231_arg_1_5 ?i)) ((_ is succ!1939) (less!231_arg_0_4 ?i))) (not (forall ((?z I_less!231)) (not (and (= (less!231_arg_0_4 ?z) (pred!1940 (less!231_arg_0_4 ?i))) (= (less!231_arg_1_5 ?z) (pred!1940 (less!231_arg_1_5 ?i))))) )) true)))) ))
(assert (not (forall ((x!344 Nat!1938) (l!345 Lst!1942)) (or (= (succ!1939 (len!254 l!345)) (len!254 (insort!281 x!344 l!345))) (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) l!345)) ) (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) (insort!281 x!344 l!345))) ) (forall ((?z I_insort!281)) (not (and (= (insort!281_arg_0_2 ?z) x!344) (= (insort!281_arg_1_3 ?z) l!345))) )) )))
(check-sat)
(exit)

