(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Lst!1983 0)(Nat!1988 0)) (((cons!1984 (head!1985 Nat!1988) (tail!1986 Lst!1983)) (nil!1987))
((succ!1989 (pred!1990 Nat!1988)) (zero!1991))
))
(declare-fun error_value!1992 () Nat!1988)
(declare-fun len!254 (Lst!1983) Nat!1988)
(declare-fun error_value!1993 () Lst!1983)
(declare-fun error_value!1994 () Lst!1983)
(declare-fun error_value!1995 () Bool)
(declare-fun sort!285 (Lst!1983) Lst!1983)
(declare-fun insort!281 (Nat!1988 Lst!1983) Lst!1983)
(declare-fun less!231 (Nat!1988 Nat!1988) Bool)
(declare-sort I_len!254 0)
(declare-fun len!254_arg_0_1 (I_len!254) Lst!1983)
(declare-sort I_sort!285 0)
(declare-fun sort!285_arg_0_2 (I_sort!285) Lst!1983)
(declare-sort I_insort!281 0)
(declare-fun insort!281_arg_0_3 (I_insort!281) Nat!1988)
(declare-fun insort!281_arg_1_4 (I_insort!281) Lst!1983)
(declare-sort I_less!231 0)
(declare-fun less!231_arg_0_5 (I_less!231) Nat!1988)
(declare-fun less!231_arg_1_6 (I_less!231) Nat!1988)
(assert (forall ((?i I_len!254)) (and (= (len!254 (len!254_arg_0_1 ?i)) (ite ((_ is nil!1987) (len!254_arg_0_1 ?i)) zero!1991 (ite ((_ is cons!1984) (len!254_arg_0_1 ?i)) (succ!1989 (len!254 (tail!1986 (len!254_arg_0_1 ?i)))) error_value!1992))) (ite ((_ is nil!1987) (len!254_arg_0_1 ?i)) true (ite ((_ is cons!1984) (len!254_arg_0_1 ?i)) (not (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) (tail!1986 (len!254_arg_0_1 ?i)))) )) true))) ))
(assert (forall ((?i I_sort!285)) (and (= (sort!285 (sort!285_arg_0_2 ?i)) (ite ((_ is nil!1987) (sort!285_arg_0_2 ?i)) nil!1987 (ite ((_ is cons!1984) (sort!285_arg_0_2 ?i)) (insort!281 (head!1985 (sort!285_arg_0_2 ?i)) (sort!285 (tail!1986 (sort!285_arg_0_2 ?i)))) error_value!1993))) (ite ((_ is nil!1987) (sort!285_arg_0_2 ?i)) true (ite ((_ is cons!1984) (sort!285_arg_0_2 ?i)) (and (not (forall ((?z I_insort!281)) (not (and (= (insort!281_arg_0_3 ?z) (head!1985 (sort!285_arg_0_2 ?i))) (= (insort!281_arg_1_4 ?z) (sort!285 (tail!1986 (sort!285_arg_0_2 ?i)))))) )) (not (forall ((?z I_sort!285)) (not (= (sort!285_arg_0_2 ?z) (tail!1986 (sort!285_arg_0_2 ?i)))) ))) true))) ))
(assert (forall ((?i I_insort!281)) (and (= (insort!281 (insort!281_arg_0_3 ?i) (insort!281_arg_1_4 ?i)) (ite ((_ is nil!1987) (insort!281_arg_1_4 ?i)) (cons!1984 (insort!281_arg_0_3 ?i) nil!1987) (ite ((_ is cons!1984) (insort!281_arg_1_4 ?i)) (ite (less!231 (insort!281_arg_0_3 ?i) (head!1985 (insort!281_arg_1_4 ?i))) (cons!1984 (insort!281_arg_0_3 ?i) (cons!1984 (head!1985 (insort!281_arg_1_4 ?i)) (tail!1986 (insort!281_arg_1_4 ?i)))) (cons!1984 (head!1985 (insort!281_arg_1_4 ?i)) (insort!281 (insort!281_arg_0_3 ?i) (tail!1986 (insort!281_arg_1_4 ?i))))) error_value!1994))) (ite ((_ is nil!1987) (insort!281_arg_1_4 ?i)) true (ite ((_ is cons!1984) (insort!281_arg_1_4 ?i)) (and (not (forall ((?z I_less!231)) (not (and (= (less!231_arg_0_5 ?z) (insort!281_arg_0_3 ?i)) (= (less!231_arg_1_6 ?z) (head!1985 (insort!281_arg_1_4 ?i))))) )) (ite (less!231 (insort!281_arg_0_3 ?i) (head!1985 (insort!281_arg_1_4 ?i))) true (not (forall ((?z I_insort!281)) (not (and (= (insort!281_arg_0_3 ?z) (insort!281_arg_0_3 ?i)) (= (insort!281_arg_1_4 ?z) (tail!1986 (insort!281_arg_1_4 ?i))))) )))) true))) ))
(assert (forall ((?i I_less!231)) (and (= (less!231 (less!231_arg_0_5 ?i) (less!231_arg_1_6 ?i)) (ite ((_ is zero!1991) (less!231_arg_1_6 ?i)) false (ite (and ((_ is succ!1989) (less!231_arg_1_6 ?i)) ((_ is zero!1991) (less!231_arg_0_5 ?i))) true (ite (and ((_ is succ!1989) (less!231_arg_1_6 ?i)) ((_ is succ!1989) (less!231_arg_0_5 ?i))) (less!231 (pred!1990 (less!231_arg_0_5 ?i)) (pred!1990 (less!231_arg_1_6 ?i))) error_value!1995)))) (ite ((_ is zero!1991) (less!231_arg_1_6 ?i)) true (ite (and ((_ is succ!1989) (less!231_arg_1_6 ?i)) ((_ is zero!1991) (less!231_arg_0_5 ?i))) true (ite (and ((_ is succ!1989) (less!231_arg_1_6 ?i)) ((_ is succ!1989) (less!231_arg_0_5 ?i))) (not (forall ((?z I_less!231)) (not (and (= (less!231_arg_0_5 ?z) (pred!1990 (less!231_arg_0_5 ?i))) (= (less!231_arg_1_6 ?z) (pred!1990 (less!231_arg_1_6 ?i))))) )) true)))) ))
(assert (not (forall ((l!358 Lst!1983)) (or (= (len!254 l!358) (len!254 (sort!285 l!358))) (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) l!358)) ) (forall ((?z I_len!254)) (not (= (len!254_arg_0_1 ?z) (sort!285 l!358))) ) (forall ((?z I_sort!285)) (not (= (sort!285_arg_0_2 ?z) l!358)) )) )))
(check-sat)
(exit)

