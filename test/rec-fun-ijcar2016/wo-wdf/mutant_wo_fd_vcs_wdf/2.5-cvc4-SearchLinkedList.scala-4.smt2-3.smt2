(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!909 0)) (((Cons!910 (head!911 (_ BitVec 32)) (tail!912 List!909)) (Nil!913))
))
(declare-fun error_value!914 () Int)
(declare-fun error_value!915 () Bool)
(declare-fun error_value!916 () Bool)
(declare-fun error_value!917 () Int)
(declare-fun firstZero!211 (List!909) Int)
(declare-fun contains!209 (List!909 (_ BitVec 32)) Bool)
(declare-fun firstZeroAtPos!214 (List!909 Int) Bool)
(declare-fun size!206 (List!909) Int)
(declare-fun error_value!918 () Int)
(declare-sort I_firstZero!211 0)
(declare-fun firstZero!211_arg_0_1 (I_firstZero!211) List!909)
(declare-sort I_contains!209 0)
(declare-fun contains!209_arg_0_2 (I_contains!209) List!909)
(declare-fun contains!209_arg_1_3 (I_contains!209) (_ BitVec 32))
(declare-sort I_firstZeroAtPos!214 0)
(declare-fun firstZeroAtPos!214_arg_0_4 (I_firstZeroAtPos!214) List!909)
(declare-fun firstZeroAtPos!214_arg_1_5 (I_firstZeroAtPos!214) Int)
(declare-sort I_size!206 0)
(declare-fun size!206_arg_0_6 (I_size!206) List!909)
(assert (forall ((?i I_firstZero!211)) (and (= (firstZero!211 (firstZero!211_arg_0_1 ?i)) (ite ((_ is Nil!913) (firstZero!211_arg_0_1 ?i)) 0 (ite ((_ is Cons!910) (firstZero!211_arg_0_1 ?i)) (ite (= (head!911 (firstZero!211_arg_0_1 ?i)) (_ bv0 32)) 0 (+ 1 (firstZero!211 (tail!912 (firstZero!211_arg_0_1 ?i))))) error_value!914))) (ite ((_ is Nil!913) (firstZero!211_arg_0_1 ?i)) true (ite ((_ is Cons!910) (firstZero!211_arg_0_1 ?i)) (ite (= (head!911 (firstZero!211_arg_0_1 ?i)) (_ bv0 32)) true (not (forall ((?z I_firstZero!211)) (not (= (firstZero!211_arg_0_1 ?z) (tail!912 (firstZero!211_arg_0_1 ?i)))) ))) true))) ))
(assert (forall ((?i I_contains!209)) (and (= (contains!209 (contains!209_arg_0_2 ?i) (contains!209_arg_1_3 ?i)) (ite ((_ is Nil!913) (contains!209_arg_0_2 ?i)) false (ite ((_ is Cons!910) (contains!209_arg_0_2 ?i)) (or (contains!209 (tail!912 (contains!209_arg_0_2 ?i)) (contains!209_arg_1_3 ?i)) (= (head!911 (contains!209_arg_0_2 ?i)) (contains!209_arg_1_3 ?i))) error_value!915))) (ite ((_ is Nil!913) (contains!209_arg_0_2 ?i)) true (ite ((_ is Cons!910) (contains!209_arg_0_2 ?i)) (not (forall ((?z I_contains!209)) (not (and (= (contains!209_arg_0_2 ?z) (tail!912 (contains!209_arg_0_2 ?i))) (= (contains!209_arg_1_3 ?z) (contains!209_arg_1_3 ?i)))) )) true))) ))
(assert (forall ((?i I_firstZeroAtPos!214)) (and (= (firstZeroAtPos!214 (firstZeroAtPos!214_arg_0_4 ?i) (firstZeroAtPos!214_arg_1_5 ?i)) (ite ((_ is Nil!913) (firstZeroAtPos!214_arg_0_4 ?i)) false (ite ((_ is Cons!910) (firstZeroAtPos!214_arg_0_4 ?i)) (ite (= (firstZeroAtPos!214_arg_1_5 ?i) 0) (= (head!911 (firstZeroAtPos!214_arg_0_4 ?i)) (_ bv0 32)) (and (firstZeroAtPos!214 (tail!912 (firstZeroAtPos!214_arg_0_4 ?i)) (+ (- 1) (firstZeroAtPos!214_arg_1_5 ?i))) (not (= (head!911 (firstZeroAtPos!214_arg_0_4 ?i)) (_ bv0 32))))) error_value!916))) (ite ((_ is Nil!913) (firstZeroAtPos!214_arg_0_4 ?i)) true (ite ((_ is Cons!910) (firstZeroAtPos!214_arg_0_4 ?i)) (ite (= (firstZeroAtPos!214_arg_1_5 ?i) 0) true (not (forall ((?z I_firstZeroAtPos!214)) (not (and (= (firstZeroAtPos!214_arg_0_4 ?z) (tail!912 (firstZeroAtPos!214_arg_0_4 ?i))) (= (firstZeroAtPos!214_arg_1_5 ?z) (+ (- 1) (firstZeroAtPos!214_arg_1_5 ?i))))) ))) true))) ))
(assert (forall ((?i I_size!206)) (and (= (size!206 (size!206_arg_0_6 ?i)) (ite ((_ is Nil!913) (size!206_arg_0_6 ?i)) 0 (ite ((_ is Cons!910) (size!206_arg_0_6 ?i)) (+ 1 (size!206 (tail!912 (size!206_arg_0_6 ?i)))) error_value!917))) (ite ((_ is Nil!913) (size!206_arg_0_6 ?i)) true (ite ((_ is Cons!910) (size!206_arg_0_6 ?i)) (not (forall ((?z I_size!206)) (not (= (size!206_arg_0_6 ?z) (tail!912 (size!206_arg_0_6 ?i)))) )) true))) ))
(assert (not (forall ((list!210 List!909)) (and (or (ite (contains!209 list!210 (_ bv0 32)) (or (= (size!206 list!210) (ite ((_ is Nil!913) list!210) 0 (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) 0 (+ 1 (firstZero!211 (tail!912 list!210)))) error_value!918))) (forall ((?z I_size!206)) (not (= (size!206_arg_0_6 ?z) list!210)) ) (not (ite ((_ is Nil!913) list!210) true (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) true (not (forall ((?z I_firstZero!211)) (not (= (firstZero!211_arg_0_1 ?z) (tail!912 list!210))) ))) true)))) (or (firstZeroAtPos!214 list!210 (ite ((_ is Nil!913) list!210) 0 (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) 0 (+ 1 (firstZero!211 (tail!912 list!210)))) error_value!918))) (forall ((?z I_firstZeroAtPos!214)) (not (and (= (firstZeroAtPos!214_arg_0_4 ?z) list!210) (= (firstZeroAtPos!214_arg_1_5 ?z) (ite ((_ is Nil!913) list!210) 0 (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) 0 (+ 1 (firstZero!211 (tail!912 list!210)))) error_value!918))))) ) (not (ite ((_ is Nil!913) list!210) true (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) true (not (forall ((?z I_firstZero!211)) (not (= (firstZero!211_arg_0_1 ?z) (tail!912 list!210))) ))) true))))) (forall ((?z I_contains!209)) (not (and (= (contains!209_arg_0_2 ?z) list!210) (= (contains!209_arg_1_3 ?z) (_ bv0 32)))) )) (or (>= (ite ((_ is Nil!913) list!210) 0 (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) 0 (+ 1 (firstZero!211 (tail!912 list!210)))) error_value!918)) 0) (not (ite ((_ is Nil!913) list!210) true (ite ((_ is Cons!910) list!210) (ite (= (head!911 list!210) (_ bv0 32)) true (not (forall ((?z I_firstZero!211)) (not (= (firstZero!211_arg_0_1 ?z) (tail!912 list!210))) ))) true))))) )))
(check-sat)
(exit)

