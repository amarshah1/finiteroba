(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((IntTree!977 0)(BoolTree!992 0)) (((Const!978 (c!979 (_ BitVec 32))) (If!980 (cond!981 BoolTree!992) (t!982 IntTree!977) (e!983 IntTree!977)) (Minus!984 (t1!985 IntTree!977) (t2!986 IntTree!977)) (Plus!987 (t1!988 IntTree!977) (t2!989 IntTree!977)) (Var!990 (index!991 (_ BitVec 32))))
((And!993 (t1!994 BoolTree!992) (t2!995 BoolTree!992)) (Eq!996 (t1!997 IntTree!977) (t2!998 IntTree!977)) (Less!999 (t1!1000 IntTree!977) (t2!1001 IntTree!977)) (Not!1002 (t!1003 BoolTree!992)))
))
(declare-fun repOk!206 (IntTree!977) Bool)
(declare-fun error_value!1004 () (_ BitVec 32))
(declare-fun error_value!1005 () Bool)
(declare-fun computesPositive!215 (IntTree!977) Bool)
(declare-fun ieval!213 (IntTree!977 (_ BitVec 32)) (_ BitVec 32))
(declare-fun beval!210 (BoolTree!992 (_ BitVec 32)) Bool)
(declare-fun identityForPositive!217 (IntTree!977) Bool)
(declare-sort I_repOk!206 0)
(declare-fun repOk!206_arg_0_1 (I_repOk!206) IntTree!977)
(declare-sort I_computesPositive!215 0)
(declare-fun computesPositive!215_arg_0_2 (I_computesPositive!215) IntTree!977)
(declare-sort I_ieval!213 0)
(declare-fun ieval!213_arg_0_3 (I_ieval!213) IntTree!977)
(declare-fun ieval!213_arg_1_4 (I_ieval!213) (_ BitVec 32))
(declare-sort I_beval!210 0)
(declare-fun beval!210_arg_0_5 (I_beval!210) BoolTree!992)
(declare-fun beval!210_arg_1_6 (I_beval!210) (_ BitVec 32))
(declare-sort I_identityForPositive!217 0)
(declare-fun identityForPositive!217_arg_0_7 (I_identityForPositive!217) IntTree!977)
(assert (forall ((?i I_repOk!206)) (repOk!206 (repOk!206_arg_0_1 ?i)) ))
(assert (forall ((?i I_computesPositive!215)) (and (= (computesPositive!215 (computesPositive!215_arg_0_2 ?i)) (and (not (bvslt (ieval!213 (computesPositive!215_arg_0_2 ?i) (_ bv2 32)) (_ bv0 32))) (not (bvslt (ieval!213 (computesPositive!215_arg_0_2 ?i) (_ bv1 32)) (_ bv0 32))) (not (bvslt (ieval!213 (computesPositive!215_arg_0_2 ?i) (_ bv0 32)) (_ bv0 32))))) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (computesPositive!215_arg_0_2 ?i)) (= (ieval!213_arg_1_4 ?z) (_ bv2 32)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (computesPositive!215_arg_0_2 ?i)) (= (ieval!213_arg_1_4 ?z) (_ bv1 32)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (computesPositive!215_arg_0_2 ?i)) (= (ieval!213_arg_1_4 ?z) (_ bv0 32)))) ))) ))
(assert (forall ((?i I_ieval!213)) (and (= (ite ((_ is Const!978) (ieval!213_arg_0_3 ?i)) (c!979 (ieval!213_arg_0_3 ?i)) (ite ((_ is Var!990) (ieval!213_arg_0_3 ?i)) (ite (= (index!991 (ieval!213_arg_0_3 ?i)) (_ bv0 32)) (ieval!213_arg_1_4 ?i) (_ bv0 32)) (ite ((_ is Plus!987) (ieval!213_arg_0_3 ?i)) (bvadd (ieval!213 (t1!988 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)) (ieval!213 (t2!989 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i))) (ite ((_ is Minus!984) (ieval!213_arg_0_3 ?i)) (bvadd (ieval!213 (t1!985 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)) (bvneg (ieval!213 (t2!986 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)))) (ite ((_ is If!980) (ieval!213_arg_0_3 ?i)) (ite (beval!210 (cond!981 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)) (ieval!213 (t!982 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)) (ieval!213 (e!983 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i))) error_value!1004))))) (ieval!213 (ieval!213_arg_0_3 ?i) (ieval!213_arg_1_4 ?i))) (ite ((_ is Const!978) (ieval!213_arg_0_3 ?i)) true (ite ((_ is Var!990) (ieval!213_arg_0_3 ?i)) true (ite ((_ is Plus!987) (ieval!213_arg_0_3 ?i)) (and (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t1!988 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t2!989 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) ))) (ite ((_ is Minus!984) (ieval!213_arg_0_3 ?i)) (and (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t1!985 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t2!986 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) ))) (ite ((_ is If!980) (ieval!213_arg_0_3 ?i)) (and (not (forall ((?z I_beval!210)) (not (and (= (beval!210_arg_0_5 ?z) (cond!981 (ieval!213_arg_0_3 ?i))) (= (beval!210_arg_1_6 ?z) (ieval!213_arg_1_4 ?i)))) )) (ite (beval!210 (cond!981 (ieval!213_arg_0_3 ?i)) (ieval!213_arg_1_4 ?i)) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t!982 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (e!983 (ieval!213_arg_0_3 ?i))) (= (ieval!213_arg_1_4 ?z) (ieval!213_arg_1_4 ?i)))) )))) true)))))) ))
(assert (forall ((?i I_beval!210)) (and (= (beval!210 (beval!210_arg_0_5 ?i) (beval!210_arg_1_6 ?i)) (ite ((_ is Less!999) (beval!210_arg_0_5 ?i)) (bvslt (ieval!213 (t1!1000 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i)) (ieval!213 (t2!1001 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i))) (ite ((_ is Eq!996) (beval!210_arg_0_5 ?i)) (= (ieval!213 (t2!998 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i)) (ieval!213 (t1!997 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i))) (ite ((_ is And!993) (beval!210_arg_0_5 ?i)) (and (beval!210 (t2!995 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i)) (beval!210 (t1!994 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i))) (ite ((_ is Not!1002) (beval!210_arg_0_5 ?i)) (not (beval!210 (t!1003 (beval!210_arg_0_5 ?i)) (beval!210_arg_1_6 ?i))) error_value!1005))))) (ite ((_ is Less!999) (beval!210_arg_0_5 ?i)) (and (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t1!1000 (beval!210_arg_0_5 ?i))) (= (ieval!213_arg_1_4 ?z) (beval!210_arg_1_6 ?i)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t2!1001 (beval!210_arg_0_5 ?i))) (= (ieval!213_arg_1_4 ?z) (beval!210_arg_1_6 ?i)))) ))) (ite ((_ is Eq!996) (beval!210_arg_0_5 ?i)) (and (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t2!998 (beval!210_arg_0_5 ?i))) (= (ieval!213_arg_1_4 ?z) (beval!210_arg_1_6 ?i)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (t1!997 (beval!210_arg_0_5 ?i))) (= (ieval!213_arg_1_4 ?z) (beval!210_arg_1_6 ?i)))) ))) (ite ((_ is And!993) (beval!210_arg_0_5 ?i)) (and (not (forall ((?z I_beval!210)) (not (and (= (beval!210_arg_0_5 ?z) (t2!995 (beval!210_arg_0_5 ?i))) (= (beval!210_arg_1_6 ?z) (beval!210_arg_1_6 ?i)))) )) (not (forall ((?z I_beval!210)) (not (and (= (beval!210_arg_0_5 ?z) (t1!994 (beval!210_arg_0_5 ?i))) (= (beval!210_arg_1_6 ?z) (beval!210_arg_1_6 ?i)))) ))) (ite ((_ is Not!1002) (beval!210_arg_0_5 ?i)) (not (forall ((?z I_beval!210)) (not (and (= (beval!210_arg_0_5 ?z) (t!1003 (beval!210_arg_0_5 ?i))) (= (beval!210_arg_1_6 ?z) (beval!210_arg_1_6 ?i)))) )) true))))) ))
(assert (forall ((?i I_identityForPositive!217)) (and (= (identityForPositive!217 (identityForPositive!217_arg_0_7 ?i)) (and (= (ieval!213 (identityForPositive!217_arg_0_7 ?i) (_ bv33 32)) (_ bv33 32)) (= (ieval!213 (identityForPositive!217_arg_0_7 ?i) (_ bv5 32)) (_ bv5 32)))) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (identityForPositive!217_arg_0_7 ?i)) (= (ieval!213_arg_1_4 ?z) (_ bv33 32)))) )) (not (forall ((?z I_ieval!213)) (not (and (= (ieval!213_arg_0_3 ?z) (identityForPositive!217_arg_0_7 ?i)) (= (ieval!213_arg_1_4 ?z) (_ bv5 32)))) ))) ))
(assert (not (forall ((t!218 IntTree!977)) (or (not (and (computesPositive!215 t!218) (not (forall ((?z I_computesPositive!215)) (not (= (computesPositive!215_arg_0_2 ?z) t!218)) )))) (not (and (identityForPositive!217 t!218) (not (forall ((?z I_identityForPositive!217)) (not (= (identityForPositive!217_arg_0_7 ?z) t!218)) )))) (not (and (repOk!206 t!218) (not (forall ((?z I_repOk!206)) (not (= (repOk!206_arg_0_1 ?z) t!218)) ))))) )))
(check-sat)
(exit)

