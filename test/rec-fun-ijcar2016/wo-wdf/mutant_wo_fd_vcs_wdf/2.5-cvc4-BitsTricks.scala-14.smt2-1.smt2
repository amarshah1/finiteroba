(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-fun rightPropagateRightmostOne!231 ((_ BitVec 32)) (_ BitVec 32))
(declare-sort I_rightPropagateRightmostOne!231 0)
(declare-fun rightPropagateRightmostOne!231_arg_0_1 (I_rightPropagateRightmostOne!231) (_ BitVec 32))
(assert (forall ((?i I_rightPropagateRightmostOne!231)) (= (bvor (rightPropagateRightmostOne!231_arg_0_1 ?i) (bvadd (rightPropagateRightmostOne!231_arg_0_1 ?i) (_ bv4294967295 32))) (rightPropagateRightmostOne!231 (rightPropagateRightmostOne!231_arg_0_1 ?i))) ))
(assert (not (forall ((x!232 (_ BitVec 32))) (or (= (rightPropagateRightmostOne!231 (rightPropagateRightmostOne!231 (rightPropagateRightmostOne!231 x!232))) x!232) (forall ((?z I_rightPropagateRightmostOne!231)) (not (= (rightPropagateRightmostOne!231_arg_0_1 ?z) (rightPropagateRightmostOne!231 (rightPropagateRightmostOne!231 x!232)))) ) (forall ((?z I_rightPropagateRightmostOne!231)) (not (= (rightPropagateRightmostOne!231_arg_0_1 ?z) (rightPropagateRightmostOne!231 x!232))) ) (forall ((?z I_rightPropagateRightmostOne!231)) (not (= (rightPropagateRightmostOne!231_arg_0_1 ?z) x!232)) )) )))
(check-sat)
(exit)

