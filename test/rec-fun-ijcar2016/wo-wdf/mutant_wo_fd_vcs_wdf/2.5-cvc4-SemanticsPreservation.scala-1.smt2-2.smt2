(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Formula!906 0)) (((And!907 (lhs!908 Formula!906) (rhs!909 Formula!906)) (Not!910 (f!911 Formula!906)) (Or!912 (lhs!913 Formula!906) (rhs!914 Formula!906)) (Variable!915 (id!916 (_ BitVec 32))))
))
(declare-fun error_value!917 () Bool)
(declare-fun isNNF!208 (Formula!906) Bool)
(declare-fun error_value!918 () Formula!906)
(declare-fun nnf!206 (Formula!906) Formula!906)
(declare-fun error_value!919 () Formula!906)
(declare-fun error_value!920 () Formula!906)
(declare-fun error_value!921 () Formula!906)
(declare-sort I_isNNF!208 0)
(declare-fun isNNF!208_arg_0_1 (I_isNNF!208) Formula!906)
(declare-sort I_nnf!206 0)
(declare-fun nnf!206_arg_0_2 (I_nnf!206) Formula!906)
(assert (forall ((?i I_isNNF!208)) (and (= (isNNF!208 (isNNF!208_arg_0_1 ?i)) (ite ((_ is And!907) (isNNF!208_arg_0_1 ?i)) (and (isNNF!208 (rhs!909 (isNNF!208_arg_0_1 ?i))) (isNNF!208 (lhs!908 (isNNF!208_arg_0_1 ?i)))) (ite ((_ is Or!912) (isNNF!208_arg_0_1 ?i)) (and (isNNF!208 (rhs!914 (isNNF!208_arg_0_1 ?i))) (isNNF!208 (lhs!913 (isNNF!208_arg_0_1 ?i)))) (ite ((_ is Not!910) (isNNF!208_arg_0_1 ?i)) false (ite ((_ is Variable!915) (isNNF!208_arg_0_1 ?i)) true error_value!917))))) (ite ((_ is And!907) (isNNF!208_arg_0_1 ?i)) (and (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (rhs!909 (isNNF!208_arg_0_1 ?i)))) )) (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (lhs!908 (isNNF!208_arg_0_1 ?i)))) ))) (ite ((_ is Or!912) (isNNF!208_arg_0_1 ?i)) (and (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (rhs!914 (isNNF!208_arg_0_1 ?i)))) )) (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (lhs!913 (isNNF!208_arg_0_1 ?i)))) ))) true))) ))
(assert (forall ((?i I_nnf!206)) (and (= (nnf!206 (nnf!206_arg_0_2 ?i)) (ite ((_ is And!907) (nnf!206_arg_0_2 ?i)) (And!907 (nnf!206 (lhs!908 (nnf!206_arg_0_2 ?i))) (nnf!206 (rhs!909 (nnf!206_arg_0_2 ?i)))) (ite ((_ is Or!912) (nnf!206_arg_0_2 ?i)) (Or!912 (nnf!206 (lhs!913 (nnf!206_arg_0_2 ?i))) (nnf!206 (rhs!914 (nnf!206_arg_0_2 ?i)))) (ite (and ((_ is And!907) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (Or!912 (nnf!206 (Not!910 (lhs!908 (f!911 (nnf!206_arg_0_2 ?i))))) (nnf!206 (Not!910 (rhs!909 (f!911 (nnf!206_arg_0_2 ?i)))))) (ite (and ((_ is Or!912) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 (nnf!206_arg_0_2 ?i))))) (nnf!206 (Not!910 (rhs!914 (f!911 (nnf!206_arg_0_2 ?i)))))) (ite (and ((_ is Not!910) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (nnf!206 (f!911 (f!911 (nnf!206_arg_0_2 ?i)))) (ite ((_ is Not!910) (nnf!206_arg_0_2 ?i)) (nnf!206_arg_0_2 ?i) (ite ((_ is Variable!915) (nnf!206_arg_0_2 ?i)) (nnf!206_arg_0_2 ?i) error_value!918)))))))) (ite ((_ is And!907) (nnf!206_arg_0_2 ?i)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!908 (nnf!206_arg_0_2 ?i)))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (rhs!909 (nnf!206_arg_0_2 ?i)))) ))) (ite ((_ is Or!912) (nnf!206_arg_0_2 ?i)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!913 (nnf!206_arg_0_2 ?i)))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (rhs!914 (nnf!206_arg_0_2 ?i)))) ))) (ite (and ((_ is And!907) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!908 (f!911 (nnf!206_arg_0_2 ?i)))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!909 (f!911 (nnf!206_arg_0_2 ?i)))))) ))) (ite (and ((_ is Or!912) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!913 (f!911 (nnf!206_arg_0_2 ?i)))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!914 (f!911 (nnf!206_arg_0_2 ?i)))))) ))) (ite (and ((_ is Not!910) (f!911 (nnf!206_arg_0_2 ?i))) ((_ is Not!910) (nnf!206_arg_0_2 ?i))) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (f!911 (f!911 (nnf!206_arg_0_2 ?i))))) )) true)))))) ))
(assert (not (forall ((BOUND_VARIABLE_743 Formula!906) (BOUND_VARIABLE_744 Formula!906)) (or (not (and (isNNF!208 (ite ((_ is And!907) BOUND_VARIABLE_744) (And!907 (nnf!206 (lhs!908 BOUND_VARIABLE_744)) (nnf!206 (rhs!909 BOUND_VARIABLE_744))) (ite ((_ is Or!912) BOUND_VARIABLE_744) (Or!912 (nnf!206 (lhs!913 BOUND_VARIABLE_744)) (nnf!206 (rhs!914 BOUND_VARIABLE_744))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (Or!912 (nnf!206 (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_744)))) (nnf!206 (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_744))))) (rhs!909 BOUND_VARIABLE_743))))) (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (ite ((_ is And!907) BOUND_VARIABLE_744) (And!907 (nnf!206 (lhs!908 BOUND_VARIABLE_744)) (nnf!206 (rhs!909 BOUND_VARIABLE_744))) (ite ((_ is Or!912) BOUND_VARIABLE_744) (Or!912 (nnf!206 (lhs!913 BOUND_VARIABLE_744)) (nnf!206 (rhs!914 BOUND_VARIABLE_744))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (Or!912 (nnf!206 (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_744)))) (nnf!206 (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_744))))) (rhs!909 BOUND_VARIABLE_743)))))) )) (ite ((_ is And!907) BOUND_VARIABLE_744) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!908 BOUND_VARIABLE_744))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (rhs!909 BOUND_VARIABLE_744))) ))) (ite ((_ is Or!912) BOUND_VARIABLE_744) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!913 BOUND_VARIABLE_744))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (rhs!914 BOUND_VARIABLE_744))) ))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_744))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_744))))) ))) true))))) (not (and (isNNF!208 (ite ((_ is And!907) BOUND_VARIABLE_743) (And!907 (nnf!206 (lhs!908 BOUND_VARIABLE_743)) (nnf!206 (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_744)))) (nnf!206 (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_744))))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (nnf!206 (f!911 (f!911 BOUND_VARIABLE_744))) (ite ((_ is Not!910) BOUND_VARIABLE_744) BOUND_VARIABLE_744 (ite ((_ is Variable!915) BOUND_VARIABLE_744) BOUND_VARIABLE_744 error_value!920)))))) (ite ((_ is Or!912) BOUND_VARIABLE_743) (Or!912 (nnf!206 (lhs!913 BOUND_VARIABLE_743)) (nnf!206 (rhs!914 BOUND_VARIABLE_743))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (Or!912 (nnf!206 (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_743)))) (nnf!206 (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_743))))) (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_743)))) (nnf!206 (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_743))))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (nnf!206 (f!911 (f!911 BOUND_VARIABLE_743))) (ite ((_ is Not!910) BOUND_VARIABLE_743) BOUND_VARIABLE_743 (ite ((_ is Variable!915) BOUND_VARIABLE_743) BOUND_VARIABLE_743 error_value!919)))))))) (not (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (ite ((_ is And!907) BOUND_VARIABLE_743) (And!907 (nnf!206 (lhs!908 BOUND_VARIABLE_743)) (nnf!206 (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_744)))) (nnf!206 (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_744))))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (nnf!206 (f!911 (f!911 BOUND_VARIABLE_744))) (ite ((_ is Not!910) BOUND_VARIABLE_744) BOUND_VARIABLE_744 (ite ((_ is Variable!915) BOUND_VARIABLE_744) BOUND_VARIABLE_744 error_value!920)))))) (ite ((_ is Or!912) BOUND_VARIABLE_743) (Or!912 (nnf!206 (lhs!913 BOUND_VARIABLE_743)) (nnf!206 (rhs!914 BOUND_VARIABLE_743))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (Or!912 (nnf!206 (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_743)))) (nnf!206 (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_743))))) (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_743)))) (nnf!206 (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_743))))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (nnf!206 (f!911 (f!911 BOUND_VARIABLE_743))) (ite ((_ is Not!910) BOUND_VARIABLE_743) BOUND_VARIABLE_743 (ite ((_ is Variable!915) BOUND_VARIABLE_743) BOUND_VARIABLE_743 error_value!919))))))))) )) (ite ((_ is And!907) BOUND_VARIABLE_743) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!908 BOUND_VARIABLE_743))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (And!907 (nnf!206 (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_744)))) (nnf!206 (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_744))))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (nnf!206 (f!911 (f!911 BOUND_VARIABLE_744))) (ite ((_ is Not!910) BOUND_VARIABLE_744) BOUND_VARIABLE_744 (ite ((_ is Variable!915) BOUND_VARIABLE_744) BOUND_VARIABLE_744 error_value!920)))))) )) (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_744))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_744))))) ))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_744)) ((_ is Not!910) BOUND_VARIABLE_744)) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (f!911 (f!911 BOUND_VARIABLE_744)))) )) true))) (ite ((_ is Or!912) BOUND_VARIABLE_743) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (lhs!913 BOUND_VARIABLE_743))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (rhs!914 BOUND_VARIABLE_743))) ))) (ite (and ((_ is And!907) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!908 (f!911 BOUND_VARIABLE_743))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!909 (f!911 BOUND_VARIABLE_743))))) ))) (ite (and ((_ is Or!912) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (and (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (lhs!913 (f!911 BOUND_VARIABLE_743))))) )) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (Not!910 (rhs!914 (f!911 BOUND_VARIABLE_743))))) ))) (ite (and ((_ is Not!910) (f!911 BOUND_VARIABLE_743)) ((_ is Not!910) BOUND_VARIABLE_743)) (not (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) (f!911 (f!911 BOUND_VARIABLE_743)))) )) true))))))) (or (isNNF!208 (And!907 (nnf!206 BOUND_VARIABLE_743) (nnf!206 BOUND_VARIABLE_744))) (forall ((?z I_isNNF!208)) (not (= (isNNF!208_arg_0_1 ?z) (And!907 (nnf!206 BOUND_VARIABLE_743) (nnf!206 BOUND_VARIABLE_744)))) ) (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) BOUND_VARIABLE_743)) ) (forall ((?z I_nnf!206)) (not (= (nnf!206_arg_0_2 ?z) BOUND_VARIABLE_744)) ))) )))
(check-sat)
(exit)

