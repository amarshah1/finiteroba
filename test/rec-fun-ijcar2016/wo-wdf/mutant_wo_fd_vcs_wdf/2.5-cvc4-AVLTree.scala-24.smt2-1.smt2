(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Tree!1262 0)) (((Leaf!1263) (Node!1264 (left!1265 Tree!1262) (value!1266 (_ BitVec 32)) (right!1267 Tree!1262) (rank!1268 (_ BitVec 32))))
))
(declare-fun error_value!1269 () (_ BitVec 32))
(declare-fun error_value!1270 () Bool)
(declare-fun error_value!1271 () Bool)
(declare-fun error_value!1272 () (_ BitVec 32))
(declare-fun error_value!1273 () (_ BitVec 32))
(declare-fun rank!222 (Tree!1262) (_ BitVec 32))
(declare-fun rankHeight!234 (Tree!1262) Bool)
(declare-fun isAVL!238 (Tree!1262) Bool)
(declare-fun height!226 (Tree!1262) (_ BitVec 32))
(declare-fun balanceFactor!236 (Tree!1262) (_ BitVec 32))
(declare-fun error_value!1274 () Bool)
(declare-fun error_value!1275 () Tree!1262)
(declare-fun rotateRight!254 (Tree!1262) Tree!1262)
(declare-fun offByOne!244 (Tree!1262) Bool)
(declare-fun max!219 ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun rotateLeft!256 (Tree!1262) Tree!1262)
(declare-fun balance!252 (Tree!1262) Tree!1262)
(declare-fun error_value!1276 () (_ BitVec 32))
(declare-fun error_value!1277 () Tree!1262)
(declare-fun size!224 (Tree!1262) (_ BitVec 32))
(declare-fun avlInsert!250 (Tree!1262 (_ BitVec 32)) Tree!1262)
(declare-fun unbalancedInsert!247 (Tree!1262 (_ BitVec 32)) Tree!1262)
(declare-sort I_rank!222 0)
(declare-fun rank!222_arg_0_1 (I_rank!222) Tree!1262)
(declare-sort I_rankHeight!234 0)
(declare-fun rankHeight!234_arg_0_2 (I_rankHeight!234) Tree!1262)
(declare-sort I_isAVL!238 0)
(declare-fun isAVL!238_arg_0_3 (I_isAVL!238) Tree!1262)
(declare-sort I_height!226 0)
(declare-fun height!226_arg_0_4 (I_height!226) Tree!1262)
(declare-sort I_balanceFactor!236 0)
(declare-fun balanceFactor!236_arg_0_5 (I_balanceFactor!236) Tree!1262)
(declare-sort I_rotateRight!254 0)
(declare-fun rotateRight!254_arg_0_6 (I_rotateRight!254) Tree!1262)
(declare-sort I_offByOne!244 0)
(declare-fun offByOne!244_arg_0_7 (I_offByOne!244) Tree!1262)
(declare-sort I_max!219 0)
(declare-fun max!219_arg_0_8 (I_max!219) (_ BitVec 32))
(declare-fun max!219_arg_1_9 (I_max!219) (_ BitVec 32))
(declare-sort I_rotateLeft!256 0)
(declare-fun rotateLeft!256_arg_0_10 (I_rotateLeft!256) Tree!1262)
(declare-sort I_balance!252 0)
(declare-fun balance!252_arg_0_11 (I_balance!252) Tree!1262)
(declare-sort I_size!224 0)
(declare-fun size!224_arg_0_12 (I_size!224) Tree!1262)
(declare-sort I_avlInsert!250 0)
(declare-fun avlInsert!250_arg_0_13 (I_avlInsert!250) Tree!1262)
(declare-fun avlInsert!250_arg_1_14 (I_avlInsert!250) (_ BitVec 32))
(declare-sort I_unbalancedInsert!247 0)
(declare-fun unbalancedInsert!247_arg_0_15 (I_unbalancedInsert!247) Tree!1262)
(declare-fun unbalancedInsert!247_arg_1_16 (I_unbalancedInsert!247) (_ BitVec 32))
(assert (forall ((?i I_rank!222)) (= (ite ((_ is Leaf!1263) (rank!222_arg_0_1 ?i)) (_ bv0 32) (ite ((_ is Node!1264) (rank!222_arg_0_1 ?i)) (rank!1268 (rank!222_arg_0_1 ?i)) error_value!1269)) (rank!222 (rank!222_arg_0_1 ?i))) ))
(assert (forall ((?i I_rankHeight!234)) (and (= (rankHeight!234 (rankHeight!234_arg_0_2 ?i)) (ite ((_ is Leaf!1263) (rankHeight!234_arg_0_2 ?i)) true (ite ((_ is Node!1264) (rankHeight!234_arg_0_2 ?i)) (and (= (height!226 (rankHeight!234_arg_0_2 ?i)) (rank!1268 (rankHeight!234_arg_0_2 ?i))) (rankHeight!234 (right!1267 (rankHeight!234_arg_0_2 ?i))) (rankHeight!234 (left!1265 (rankHeight!234_arg_0_2 ?i)))) error_value!1270))) (ite ((_ is Leaf!1263) (rankHeight!234_arg_0_2 ?i)) true (ite ((_ is Node!1264) (rankHeight!234_arg_0_2 ?i)) (and (not (forall ((?z I_height!226)) (not (= (height!226_arg_0_4 ?z) (rankHeight!234_arg_0_2 ?i))) )) (not (forall ((?z I_rankHeight!234)) (not (= (rankHeight!234_arg_0_2 ?z) (right!1267 (rankHeight!234_arg_0_2 ?i)))) )) (not (forall ((?z I_rankHeight!234)) (not (= (rankHeight!234_arg_0_2 ?z) (left!1265 (rankHeight!234_arg_0_2 ?i)))) ))) true))) ))
(assert (forall ((?i I_isAVL!238)) (and (= (isAVL!238 (isAVL!238_arg_0_3 ?i)) (ite ((_ is Leaf!1263) (isAVL!238_arg_0_3 ?i)) true (ite ((_ is Node!1264) (isAVL!238_arg_0_3 ?i)) (and (rankHeight!234 (isAVL!238_arg_0_3 ?i)) (not (bvslt (_ bv1 32) (balanceFactor!236 (isAVL!238_arg_0_3 ?i)))) (not (bvslt (balanceFactor!236 (isAVL!238_arg_0_3 ?i)) (_ bv4294967295 32))) (isAVL!238 (right!1267 (isAVL!238_arg_0_3 ?i))) (isAVL!238 (left!1265 (isAVL!238_arg_0_3 ?i)))) error_value!1271))) (ite ((_ is Leaf!1263) (isAVL!238_arg_0_3 ?i)) true (ite ((_ is Node!1264) (isAVL!238_arg_0_3 ?i)) (and (not (forall ((?z I_rankHeight!234)) (not (= (rankHeight!234_arg_0_2 ?z) (isAVL!238_arg_0_3 ?i))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (isAVL!238_arg_0_3 ?i))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (isAVL!238_arg_0_3 ?i))) )) (not (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) (right!1267 (isAVL!238_arg_0_3 ?i)))) )) (not (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) (left!1265 (isAVL!238_arg_0_3 ?i)))) ))) true))) ))
(assert (forall ((?i I_height!226)) (and (= (ite ((_ is Leaf!1263) (height!226_arg_0_4 ?i)) (_ bv0 32) (ite ((_ is Node!1264) (height!226_arg_0_4 ?i)) (ite (bvslt (height!226 (right!1267 (height!226_arg_0_4 ?i))) (height!226 (left!1265 (height!226_arg_0_4 ?i)))) (bvadd (height!226 (left!1265 (height!226_arg_0_4 ?i))) (_ bv1 32)) (bvadd (height!226 (right!1267 (height!226_arg_0_4 ?i))) (_ bv1 32))) error_value!1272)) (height!226 (height!226_arg_0_4 ?i))) (ite ((_ is Leaf!1263) (height!226_arg_0_4 ?i)) true (ite ((_ is Node!1264) (height!226_arg_0_4 ?i)) (and (not (forall ((?z I_height!226)) (not (= (height!226_arg_0_4 ?z) (right!1267 (height!226_arg_0_4 ?i)))) )) (not (forall ((?z I_height!226)) (not (= (height!226_arg_0_4 ?z) (left!1265 (height!226_arg_0_4 ?i)))) )) (ite (bvslt (height!226 (right!1267 (height!226_arg_0_4 ?i))) (height!226 (left!1265 (height!226_arg_0_4 ?i)))) (not (forall ((?z I_height!226)) (not (= (height!226_arg_0_4 ?z) (left!1265 (height!226_arg_0_4 ?i)))) )) (not (forall ((?z I_height!226)) (not (= (height!226_arg_0_4 ?z) (right!1267 (height!226_arg_0_4 ?i)))) )))) true))) ))
(assert (forall ((?i I_balanceFactor!236)) (and (= (ite ((_ is Leaf!1263) (balanceFactor!236_arg_0_5 ?i)) (_ bv0 32) (ite ((_ is Node!1264) (balanceFactor!236_arg_0_5 ?i)) (bvadd (rank!222 (left!1265 (balanceFactor!236_arg_0_5 ?i))) (bvneg (rank!222 (right!1267 (balanceFactor!236_arg_0_5 ?i))))) error_value!1273)) (balanceFactor!236 (balanceFactor!236_arg_0_5 ?i))) (ite ((_ is Leaf!1263) (balanceFactor!236_arg_0_5 ?i)) true (ite ((_ is Node!1264) (balanceFactor!236_arg_0_5 ?i)) (and (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (balanceFactor!236_arg_0_5 ?i)))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (balanceFactor!236_arg_0_5 ?i)))) ))) true))) ))
(assert (forall ((?i I_rotateRight!254)) (and (= (rotateRight!254 (rotateRight!254_arg_0_6 ?i)) (ite (and ((_ is Node!1264) (left!1265 (rotateRight!254_arg_0_6 ?i))) ((_ is Node!1264) (rotateRight!254_arg_0_6 ?i))) (Node!1264 (left!1265 (left!1265 (rotateRight!254_arg_0_6 ?i))) (value!1266 (left!1265 (rotateRight!254_arg_0_6 ?i))) (Node!1264 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i))) (value!1266 (rotateRight!254_arg_0_6 ?i)) (right!1267 (rotateRight!254_arg_0_6 ?i)) (bvadd (max!219 (rank!222 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i)))) (rank!222 (right!1267 (rotateRight!254_arg_0_6 ?i)))) (_ bv1 32))) (bvadd (max!219 (rank!222 (left!1265 (left!1265 (rotateRight!254_arg_0_6 ?i)))) (bvadd (max!219 (rank!222 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i)))) (rank!222 (right!1267 (rotateRight!254_arg_0_6 ?i)))) (_ bv1 32))) (_ bv1 32))) (rotateRight!254_arg_0_6 ?i))) (ite (and ((_ is Node!1264) (left!1265 (rotateRight!254_arg_0_6 ?i))) ((_ is Node!1264) (rotateRight!254_arg_0_6 ?i))) (and (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i))))) (= (max!219_arg_1_9 ?z) (rank!222 (right!1267 (rotateRight!254_arg_0_6 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (rotateRight!254_arg_0_6 ?i)))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (left!1265 (left!1265 (rotateRight!254_arg_0_6 ?i))))) (= (max!219_arg_1_9 ?z) (bvadd (max!219 (rank!222 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i)))) (rank!222 (right!1267 (rotateRight!254_arg_0_6 ?i)))) (_ bv1 32))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (left!1265 (rotateRight!254_arg_0_6 ?i))))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i))))) (= (max!219_arg_1_9 ?z) (rank!222 (right!1267 (rotateRight!254_arg_0_6 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (left!1265 (rotateRight!254_arg_0_6 ?i))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (rotateRight!254_arg_0_6 ?i)))) ))) true)) ))
(assert (forall ((?i I_offByOne!244)) (and (= (offByOne!244 (offByOne!244_arg_0_7 ?i)) (ite ((_ is Leaf!1263) (offByOne!244_arg_0_7 ?i)) true (ite ((_ is Node!1264) (offByOne!244_arg_0_7 ?i)) (and (not (bvslt (_ bv2 32) (balanceFactor!236 (offByOne!244_arg_0_7 ?i)))) (not (bvslt (balanceFactor!236 (offByOne!244_arg_0_7 ?i)) (_ bv4294967294 32))) (isAVL!238 (right!1267 (offByOne!244_arg_0_7 ?i))) (isAVL!238 (left!1265 (offByOne!244_arg_0_7 ?i)))) error_value!1274))) (ite ((_ is Leaf!1263) (offByOne!244_arg_0_7 ?i)) true (ite ((_ is Node!1264) (offByOne!244_arg_0_7 ?i)) (and (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (offByOne!244_arg_0_7 ?i))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (offByOne!244_arg_0_7 ?i))) )) (not (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) (right!1267 (offByOne!244_arg_0_7 ?i)))) )) (not (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) (left!1265 (offByOne!244_arg_0_7 ?i)))) ))) true))) ))
(assert (forall ((?i I_max!219)) (= (ite (not (bvslt (max!219_arg_0_8 ?i) (max!219_arg_1_9 ?i))) (max!219_arg_0_8 ?i) (max!219_arg_1_9 ?i)) (max!219 (max!219_arg_0_8 ?i) (max!219_arg_1_9 ?i))) ))
(assert (forall ((?i I_rotateLeft!256)) (and (= (rotateLeft!256 (rotateLeft!256_arg_0_10 ?i)) (ite (and ((_ is Node!1264) (right!1267 (rotateLeft!256_arg_0_10 ?i))) ((_ is Node!1264) (rotateLeft!256_arg_0_10 ?i))) (Node!1264 (Node!1264 (left!1265 (rotateLeft!256_arg_0_10 ?i)) (value!1266 (rotateLeft!256_arg_0_10 ?i)) (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))) (bvadd (max!219 (rank!222 (left!1265 (rotateLeft!256_arg_0_10 ?i))) (rank!222 (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) (_ bv1 32))) (value!1266 (right!1267 (rotateLeft!256_arg_0_10 ?i))) (right!1267 (right!1267 (rotateLeft!256_arg_0_10 ?i))) (bvadd (max!219 (bvadd (max!219 (rank!222 (left!1265 (rotateLeft!256_arg_0_10 ?i))) (rank!222 (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) (_ bv1 32)) (rank!222 (right!1267 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) (_ bv1 32))) (rotateLeft!256_arg_0_10 ?i))) (ite (and ((_ is Node!1264) (right!1267 (rotateLeft!256_arg_0_10 ?i))) ((_ is Node!1264) (rotateLeft!256_arg_0_10 ?i))) (and (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (left!1265 (rotateLeft!256_arg_0_10 ?i)))) (= (max!219_arg_1_9 ?z) (rank!222 (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (rotateLeft!256_arg_0_10 ?i)))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (bvadd (max!219 (rank!222 (left!1265 (rotateLeft!256_arg_0_10 ?i))) (rank!222 (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) (_ bv1 32))) (= (max!219_arg_1_9 ?z) (rank!222 (right!1267 (right!1267 (rotateLeft!256_arg_0_10 ?i))))))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (left!1265 (rotateLeft!256_arg_0_10 ?i)))) (= (max!219_arg_1_9 ?z) (rank!222 (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (rotateLeft!256_arg_0_10 ?i)))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (right!1267 (rotateLeft!256_arg_0_10 ?i))))) ))) true)) ))
(assert (forall ((?i I_balance!252)) (and (= (balance!252 (balance!252_arg_0_11 ?i)) (ite ((_ is Leaf!1263) (balance!252_arg_0_11 ?i)) Leaf!1263 (ite ((_ is Node!1264) (balance!252_arg_0_11 ?i)) (ite (bvslt (_ bv1 32) (balanceFactor!236 (balance!252_arg_0_11 ?i))) (rotateRight!254 (Node!1264 (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i))) (value!1266 (balance!252_arg_0_11 ?i)) (right!1267 (balance!252_arg_0_11 ?i)) (bvadd (max!219 (rank!222 (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i)))) (rank!222 (right!1267 (balance!252_arg_0_11 ?i)))) (_ bv1 32)))) (ite (bvslt (balanceFactor!236 (balance!252_arg_0_11 ?i)) (_ bv4294967295 32)) (rotateLeft!256 (Node!1264 (left!1265 (balance!252_arg_0_11 ?i)) (value!1266 (balance!252_arg_0_11 ?i)) (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i))) (bvadd (max!219 (rank!222 (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i)))) (rank!222 (left!1265 (balance!252_arg_0_11 ?i)))) (_ bv1 32)))) (balance!252_arg_0_11 ?i))) error_value!1275))) (ite ((_ is Leaf!1263) (balance!252_arg_0_11 ?i)) true (ite ((_ is Node!1264) (balance!252_arg_0_11 ?i)) (and (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (balance!252_arg_0_11 ?i))) )) (ite (bvslt (_ bv1 32) (balanceFactor!236 (balance!252_arg_0_11 ?i))) (and (not (forall ((?z I_rotateRight!254)) (not (= (rotateRight!254_arg_0_6 ?z) (Node!1264 (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i))) (value!1266 (balance!252_arg_0_11 ?i)) (right!1267 (balance!252_arg_0_11 ?i)) (bvadd (max!219 (rank!222 (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i)))) (rank!222 (right!1267 (balance!252_arg_0_11 ?i)))) (_ bv1 32))))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (left!1265 (balance!252_arg_0_11 ?i)))) )) (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (not (forall ((?z I_rotateLeft!256)) (not (= (rotateLeft!256_arg_0_10 ?z) (left!1265 (balance!252_arg_0_11 ?i)))) )) true) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i))))) (= (max!219_arg_1_9 ?z) (rank!222 (right!1267 (balance!252_arg_0_11 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (rotateLeft!256 (left!1265 (balance!252_arg_0_11 ?i))) (left!1265 (balance!252_arg_0_11 ?i))))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (left!1265 (balance!252_arg_0_11 ?i)))) )) (ite (bvslt (balanceFactor!236 (left!1265 (balance!252_arg_0_11 ?i))) (_ bv0 32)) (not (forall ((?z I_rotateLeft!256)) (not (= (rotateLeft!256_arg_0_10 ?z) (left!1265 (balance!252_arg_0_11 ?i)))) )) true) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (balance!252_arg_0_11 ?i)))) ))) (and (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (balance!252_arg_0_11 ?i))) )) (ite (bvslt (balanceFactor!236 (balance!252_arg_0_11 ?i)) (_ bv4294967295 32)) (and (not (forall ((?z I_rotateLeft!256)) (not (= (rotateLeft!256_arg_0_10 ?z) (Node!1264 (left!1265 (balance!252_arg_0_11 ?i)) (value!1266 (balance!252_arg_0_11 ?i)) (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i))) (bvadd (max!219 (rank!222 (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i)))) (rank!222 (left!1265 (balance!252_arg_0_11 ?i)))) (_ bv1 32))))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (right!1267 (balance!252_arg_0_11 ?i)))) )) (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (not (forall ((?z I_rotateRight!254)) (not (= (rotateRight!254_arg_0_6 ?z) (right!1267 (balance!252_arg_0_11 ?i)))) )) true) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i))))) (= (max!219_arg_1_9 ?z) (rank!222 (left!1265 (balance!252_arg_0_11 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (rotateRight!254 (right!1267 (balance!252_arg_0_11 ?i))) (right!1267 (balance!252_arg_0_11 ?i))))) )) (not (forall ((?z I_balanceFactor!236)) (not (= (balanceFactor!236_arg_0_5 ?z) (right!1267 (balance!252_arg_0_11 ?i)))) )) (ite (bvslt (_ bv0 32) (balanceFactor!236 (right!1267 (balance!252_arg_0_11 ?i)))) (not (forall ((?z I_rotateRight!254)) (not (= (rotateRight!254_arg_0_6 ?z) (right!1267 (balance!252_arg_0_11 ?i)))) )) true) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (balance!252_arg_0_11 ?i)))) ))) true)))) true))) ))
(assert (forall ((?i I_size!224)) (and (= (ite ((_ is Leaf!1263) (size!224_arg_0_12 ?i)) (_ bv0 32) (ite ((_ is Node!1264) (size!224_arg_0_12 ?i)) (bvadd (size!224 (left!1265 (size!224_arg_0_12 ?i))) (bvadd (size!224 (right!1267 (size!224_arg_0_12 ?i))) (_ bv1 32))) error_value!1276)) (size!224 (size!224_arg_0_12 ?i))) (ite ((_ is Leaf!1263) (size!224_arg_0_12 ?i)) true (ite ((_ is Node!1264) (size!224_arg_0_12 ?i)) (and (not (forall ((?z I_size!224)) (not (= (size!224_arg_0_12 ?z) (left!1265 (size!224_arg_0_12 ?i)))) )) (not (forall ((?z I_size!224)) (not (= (size!224_arg_0_12 ?z) (right!1267 (size!224_arg_0_12 ?i)))) ))) true))) ))
(assert (forall ((?i I_avlInsert!250)) (and (= (avlInsert!250 (avlInsert!250_arg_0_13 ?i) (avlInsert!250_arg_1_14 ?i)) (balance!252 (unbalancedInsert!247 (avlInsert!250_arg_0_13 ?i) (avlInsert!250_arg_1_14 ?i)))) (not (forall ((?z I_balance!252)) (not (= (balance!252_arg_0_11 ?z) (unbalancedInsert!247 (avlInsert!250_arg_0_13 ?i) (avlInsert!250_arg_1_14 ?i)))) )) (not (forall ((?z I_unbalancedInsert!247)) (not (and (= (unbalancedInsert!247_arg_0_15 ?z) (avlInsert!250_arg_0_13 ?i)) (= (unbalancedInsert!247_arg_1_16 ?z) (avlInsert!250_arg_1_14 ?i)))) ))) ))
(assert (forall ((?i I_unbalancedInsert!247)) (and (= (unbalancedInsert!247 (unbalancedInsert!247_arg_0_15 ?i) (unbalancedInsert!247_arg_1_16 ?i)) (ite ((_ is Leaf!1263) (unbalancedInsert!247_arg_0_15 ?i)) (Node!1264 Leaf!1263 (unbalancedInsert!247_arg_1_16 ?i) Leaf!1263 (_ bv1 32)) (ite ((_ is Node!1264) (unbalancedInsert!247_arg_0_15 ?i)) (ite (= (value!1266 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)) (unbalancedInsert!247_arg_0_15 ?i) (ite (bvslt (unbalancedInsert!247_arg_1_16 ?i) (value!1266 (unbalancedInsert!247_arg_0_15 ?i))) (Node!1264 (avlInsert!250 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)) (value!1266 (unbalancedInsert!247_arg_0_15 ?i)) (right!1267 (unbalancedInsert!247_arg_0_15 ?i)) (bvadd (max!219 (rank!222 (avlInsert!250 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i))) (rank!222 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)))) (_ bv1 32))) (Node!1264 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)) (value!1266 (unbalancedInsert!247_arg_0_15 ?i)) (avlInsert!250 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)) (bvadd (max!219 (rank!222 (left!1265 (unbalancedInsert!247_arg_0_15 ?i))) (rank!222 (avlInsert!250 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)))) (_ bv1 32))))) error_value!1277))) (ite ((_ is Leaf!1263) (unbalancedInsert!247_arg_0_15 ?i)) true (ite ((_ is Node!1264) (unbalancedInsert!247_arg_0_15 ?i)) (ite (= (value!1266 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)) true (ite (bvslt (unbalancedInsert!247_arg_1_16 ?i) (value!1266 (unbalancedInsert!247_arg_0_15 ?i))) (and (not (forall ((?z I_avlInsert!250)) (not (and (= (avlInsert!250_arg_0_13 ?z) (left!1265 (unbalancedInsert!247_arg_0_15 ?i))) (= (avlInsert!250_arg_1_14 ?z) (unbalancedInsert!247_arg_1_16 ?i)))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (avlInsert!250 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)))) (= (max!219_arg_1_9 ?z) (rank!222 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (avlInsert!250 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)))) )) (not (forall ((?z I_avlInsert!250)) (not (and (= (avlInsert!250_arg_0_13 ?z) (left!1265 (unbalancedInsert!247_arg_0_15 ?i))) (= (avlInsert!250_arg_1_14 ?z) (unbalancedInsert!247_arg_1_16 ?i)))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (right!1267 (unbalancedInsert!247_arg_0_15 ?i)))) ))) (and (not (forall ((?z I_avlInsert!250)) (not (and (= (avlInsert!250_arg_0_13 ?z) (right!1267 (unbalancedInsert!247_arg_0_15 ?i))) (= (avlInsert!250_arg_1_14 ?z) (unbalancedInsert!247_arg_1_16 ?i)))) )) (not (forall ((?z I_max!219)) (not (and (= (max!219_arg_0_8 ?z) (rank!222 (left!1265 (unbalancedInsert!247_arg_0_15 ?i)))) (= (max!219_arg_1_9 ?z) (rank!222 (avlInsert!250 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)))))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (left!1265 (unbalancedInsert!247_arg_0_15 ?i)))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (avlInsert!250 (right!1267 (unbalancedInsert!247_arg_0_15 ?i)) (unbalancedInsert!247_arg_1_16 ?i)))) )) (not (forall ((?z I_avlInsert!250)) (not (and (= (avlInsert!250_arg_0_13 ?z) (right!1267 (unbalancedInsert!247_arg_0_15 ?i))) (= (avlInsert!250_arg_1_14 ?z) (unbalancedInsert!247_arg_1_16 ?i)))) ))))) true))) ))
(assert (not (forall ((t!248 Tree!1262) (e!249 (_ BitVec 32))) (or (or (isAVL!238 t!248) (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) t!248)) )) (and (not (and (bvslt (bvadd (size!224 t!248) (_ bv1 32)) (size!224 (balance!252 (unbalancedInsert!247 t!248 e!249)))) (not (forall ((?z I_size!224)) (not (= (size!224_arg_0_12 ?z) t!248)) )) (not (forall ((?z I_size!224)) (not (= (size!224_arg_0_12 ?z) (balance!252 (unbalancedInsert!247 t!248 e!249)))) )) (not (forall ((?z I_balance!252)) (not (= (balance!252_arg_0_11 ?z) (unbalancedInsert!247 t!248 e!249))) )) (not (forall ((?z I_unbalancedInsert!247)) (not (and (= (unbalancedInsert!247_arg_0_15 ?z) t!248) (= (unbalancedInsert!247_arg_1_16 ?z) e!249))) )))) (not (and (bvslt (bvadd (rank!222 t!248) (_ bv1 32)) (rank!222 (balance!252 (unbalancedInsert!247 t!248 e!249)))) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) t!248)) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (balance!252 (unbalancedInsert!247 t!248 e!249)))) )) (not (forall ((?z I_balance!252)) (not (= (balance!252_arg_0_11 ?z) (unbalancedInsert!247 t!248 e!249))) )) (not (forall ((?z I_unbalancedInsert!247)) (not (and (= (unbalancedInsert!247_arg_0_15 ?z) t!248) (= (unbalancedInsert!247_arg_1_16 ?z) e!249))) )))) (not (and (bvslt (rank!222 (balance!252 (unbalancedInsert!247 t!248 e!249))) (rank!222 t!248)) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) (balance!252 (unbalancedInsert!247 t!248 e!249)))) )) (not (forall ((?z I_balance!252)) (not (= (balance!252_arg_0_11 ?z) (unbalancedInsert!247 t!248 e!249))) )) (not (forall ((?z I_unbalancedInsert!247)) (not (and (= (unbalancedInsert!247_arg_0_15 ?z) t!248) (= (unbalancedInsert!247_arg_1_16 ?z) e!249))) )) (not (forall ((?z I_rank!222)) (not (= (rank!222_arg_0_1 ?z) t!248)) )))) (or (isAVL!238 (balance!252 (unbalancedInsert!247 t!248 e!249))) (forall ((?z I_isAVL!238)) (not (= (isAVL!238_arg_0_3 ?z) (balance!252 (unbalancedInsert!247 t!248 e!249)))) ) (forall ((?z I_balance!252)) (not (= (balance!252_arg_0_11 ?z) (unbalancedInsert!247 t!248 e!249))) ) (forall ((?z I_unbalancedInsert!247)) (not (and (= (unbalancedInsert!247_arg_0_15 ?z) t!248) (= (unbalancedInsert!247_arg_1_16 ?z) e!249))) )))) )))
(check-sat)
(exit)

