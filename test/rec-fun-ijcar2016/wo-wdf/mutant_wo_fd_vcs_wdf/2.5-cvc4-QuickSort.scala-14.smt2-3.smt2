(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!1079 0)) (((Cons!1080 (head!1081 (_ BitVec 32)) (tail!1082 List!1079)) (Nil!1083))
))
(declare-datatypes ((OptInt!1084 0)) (((None!1085) (Some!1086 (i!1087 (_ BitVec 32))))
))
(declare-fun error_value!1088 () OptInt!1084)
(declare-fun error_value!1089 () OptInt!1084)
(declare-fun min!214 (List!1079) OptInt!1084)
(declare-fun error_value!1090 () List!1079)
(declare-fun greater!227 ((_ BitVec 32) List!1079) List!1079)
(declare-fun error_value!1091 () Bool)
(declare-sort I_min!214 0)
(declare-fun min!214_arg_0_1 (I_min!214) List!1079)
(declare-sort I_greater!227 0)
(declare-fun greater!227_arg_0_2 (I_greater!227) (_ BitVec 32))
(declare-fun greater!227_arg_1_3 (I_greater!227) List!1079)
(assert (forall ((?i I_min!214)) (and (= (min!214 (min!214_arg_0_1 ?i)) (ite ((_ is Nil!1083) (min!214_arg_0_1 ?i)) None!1085 (ite ((_ is Cons!1080) (min!214_arg_0_1 ?i)) (ite ((_ is Some!1086) (min!214 (tail!1082 (min!214_arg_0_1 ?i)))) (ite (not (bvslt (i!1087 (min!214 (tail!1082 (min!214_arg_0_1 ?i)))) (head!1081 (min!214_arg_0_1 ?i)))) (Some!1086 (head!1081 (min!214_arg_0_1 ?i))) (Some!1086 (i!1087 (min!214 (tail!1082 (min!214_arg_0_1 ?i)))))) (ite ((_ is None!1085) (min!214 (tail!1082 (min!214_arg_0_1 ?i)))) (Some!1086 (head!1081 (min!214_arg_0_1 ?i))) error_value!1088)) error_value!1089))) (ite ((_ is Nil!1083) (min!214_arg_0_1 ?i)) true (ite ((_ is Cons!1080) (min!214_arg_0_1 ?i)) (and (not (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (tail!1082 (min!214_arg_0_1 ?i)))) )) (ite ((_ is Some!1086) (min!214 (tail!1082 (min!214_arg_0_1 ?i)))) (and (not (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (tail!1082 (min!214_arg_0_1 ?i)))) )) (ite (not (bvslt (i!1087 (min!214 (tail!1082 (min!214_arg_0_1 ?i)))) (head!1081 (min!214_arg_0_1 ?i)))) true (not (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (tail!1082 (min!214_arg_0_1 ?i)))) )))) (not (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (tail!1082 (min!214_arg_0_1 ?i)))) )))) true))) ))
(assert (forall ((?i I_greater!227)) (and (= (greater!227 (greater!227_arg_0_2 ?i) (greater!227_arg_1_3 ?i)) (ite ((_ is Nil!1083) (greater!227_arg_1_3 ?i)) Nil!1083 (ite ((_ is Cons!1080) (greater!227_arg_1_3 ?i)) (ite (bvslt (greater!227_arg_0_2 ?i) (head!1081 (greater!227_arg_1_3 ?i))) (Cons!1080 (head!1081 (greater!227_arg_1_3 ?i)) (greater!227 (greater!227_arg_0_2 ?i) (tail!1082 (greater!227_arg_1_3 ?i)))) (greater!227 (greater!227_arg_0_2 ?i) (tail!1082 (greater!227_arg_1_3 ?i)))) error_value!1090))) (ite ((_ is Nil!1083) (greater!227_arg_1_3 ?i)) true (ite ((_ is Cons!1080) (greater!227_arg_1_3 ?i)) (ite (bvslt (greater!227_arg_0_2 ?i) (head!1081 (greater!227_arg_1_3 ?i))) (not (forall ((?z I_greater!227)) (not (and (= (greater!227_arg_0_2 ?z) (greater!227_arg_0_2 ?i)) (= (greater!227_arg_1_3 ?z) (tail!1082 (greater!227_arg_1_3 ?i))))) )) (not (forall ((?z I_greater!227)) (not (and (= (greater!227_arg_0_2 ?z) (greater!227_arg_0_2 ?i)) (= (greater!227_arg_1_3 ?z) (tail!1082 (greater!227_arg_1_3 ?i))))) ))) true))) ))
(assert (not (forall ((n!228 (_ BitVec 32))) (or (ite ((_ is None!1085) (min!214 (greater!227 n!228 Nil!1083))) (or (bvslt n!228 (i!1087 (min!214 (greater!227 n!228 Nil!1083)))) (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (greater!227 n!228 Nil!1083))) ) (forall ((?z I_greater!227)) (not (and (= (greater!227_arg_0_2 ?z) n!228) (= (greater!227_arg_1_3 ?z) Nil!1083))) )) (or (ite ((_ is Some!1086) (min!214 (greater!227 n!228 Nil!1083))) true error_value!1091) (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (greater!227 n!228 Nil!1083))) ) (forall ((?z I_greater!227)) (not (and (= (greater!227_arg_0_2 ?z) n!228) (= (greater!227_arg_1_3 ?z) Nil!1083))) ))) (forall ((?z I_min!214)) (not (= (min!214_arg_0_1 ?z) (greater!227 n!228 Nil!1083))) ) (forall ((?z I_greater!227)) (not (and (= (greater!227_arg_0_2 ?z) n!228) (= (greater!227_arg_1_3 ?z) Nil!1083))) )) )))
(check-sat)
(exit)

