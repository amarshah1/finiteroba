(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!2590 0)) (((succ!2591 (pred!2592 Nat!2590)) (zero!2593))
))
(declare-fun error_value!2594 () Nat!2590)
(declare-fun minus!240 (Nat!2590 Nat!2590) Nat!2590)
(declare-sort I_minus!240 0)
(declare-fun minus!240_arg_0_1 (I_minus!240) Nat!2590)
(declare-fun minus!240_arg_1_2 (I_minus!240) Nat!2590)
(assert (forall ((?i I_minus!240)) (and (= (minus!240 (minus!240_arg_0_1 ?i) (minus!240_arg_1_2 ?i)) (ite ((_ is zero!2593) (minus!240_arg_0_1 ?i)) zero!2593 (ite ((_ is zero!2593) (minus!240_arg_1_2 ?i)) (minus!240_arg_0_1 ?i) (ite (and ((_ is succ!2591) (minus!240_arg_1_2 ?i)) ((_ is succ!2591) (minus!240_arg_0_1 ?i))) (minus!240 (pred!2592 (minus!240_arg_0_1 ?i)) (pred!2592 (minus!240_arg_1_2 ?i))) error_value!2594)))) (ite ((_ is zero!2593) (minus!240_arg_0_1 ?i)) true (ite ((_ is zero!2593) (minus!240_arg_1_2 ?i)) true (ite (and ((_ is succ!2591) (minus!240_arg_1_2 ?i)) ((_ is succ!2591) (minus!240_arg_0_1 ?i))) (not (forall ((?z I_minus!240)) (not (and (= (minus!240_arg_0_1 ?z) (pred!2592 (minus!240_arg_0_1 ?i))) (= (minus!240_arg_1_2 ?z) (pred!2592 (minus!240_arg_1_2 ?i))))) )) true)))) ))
(assert (not (forall ((m!533 Nat!2590) (n!534 Nat!2590) (k!535 Nat!2590)) (or (= (minus!240 (minus!240 n!534 n!534) (succ!2591 k!535)) (minus!240 (minus!240 m!533 (succ!2591 m!533)) k!535)) (forall ((?z I_minus!240)) (not (and (= (minus!240_arg_0_1 ?z) (minus!240 n!534 n!534)) (= (minus!240_arg_1_2 ?z) (succ!2591 k!535)))) ) (forall ((?z I_minus!240)) (not (and (= (minus!240_arg_0_1 ?z) n!534) (= (minus!240_arg_1_2 ?z) n!534))) ) (forall ((?z I_minus!240)) (not (and (= (minus!240_arg_0_1 ?z) (minus!240 m!533 (succ!2591 m!533))) (= (minus!240_arg_1_2 ?z) k!535))) ) (forall ((?z I_minus!240)) (not (and (= (minus!240_arg_0_1 ?z) m!533) (= (minus!240_arg_1_2 ?z) (succ!2591 m!533)))) )) )))
(check-sat)
(exit)

