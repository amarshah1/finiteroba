(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Statement!1624 0)(Expression!1646 0)(List!1685 0)) (((Assign!1625 (varID!1626 (_ BitVec 32)) (expr!1627 Expression!1646)) (Block!1628 (body!1629 List!1685)) (For!1630 (init!1631 Statement!1624) (expr!1632 Expression!1646) (step!1633 Statement!1624) (body!1634 Statement!1624)) (IfThenElse!1635 (expr!1636 Expression!1646) (then!1637 Statement!1624) (elze!1638 Statement!1624)) (Print!1639 (msg!1640 (_ BitVec 32)) (varID!1641 (_ BitVec 32))) (Skip!1642) (While!1643 (expr!1644 Expression!1646) (body!1645 Statement!1624)))
((And!1647 (lhs!1648 Expression!1646) (rhs!1649 Expression!1646)) (Division!1650 (lhs!1651 Expression!1646) (rhs!1652 Expression!1646)) (Equals!1653 (lhs!1654 Expression!1646) (rhs!1655 Expression!1646)) (GreaterThan!1656 (lhs!1657 Expression!1646) (rhs!1658 Expression!1646)) (IntLiteral!1659 (value!1660 (_ BitVec 32))) (LessThan!1661 (lhs!1662 Expression!1646) (rhs!1663 Expression!1646)) (Minus!1664 (lhs!1665 Expression!1646) (rhs!1666 Expression!1646)) (Modulo!1667 (lhs!1668 Expression!1646) (rhs!1669 Expression!1646)) (Neg!1670 (expr!1671 Expression!1646)) (Not!1672 (expr!1673 Expression!1646)) (Or!1674 (lhs!1675 Expression!1646) (rhs!1676 Expression!1646)) (Plus!1677 (lhs!1678 Expression!1646) (rhs!1679 Expression!1646)) (Times!1680 (lhs!1681 Expression!1646) (rhs!1682 Expression!1646)) (Var!1683 (varID!1684 (_ BitVec 32))))
((Cons!1686 (head!1687 Statement!1624) (tail!1688 List!1685)) (Nil!1689))
))
(declare-fun error_value!1690 () Bool)
(declare-fun isForFree!225 (Statement!1624) Bool)
(declare-fun isForFreeList!223 (List!1685) Bool)
(declare-fun error_value!1691 () List!1685)
(declare-fun eliminateForLoopsList!215 (List!1685) List!1685)
(declare-fun eliminateForLoops!217 (Statement!1624) Statement!1624)
(declare-sort I_isForFree!225 0)
(declare-fun isForFree!225_arg_0_1 (I_isForFree!225) Statement!1624)
(declare-sort I_isForFreeList!223 0)
(declare-fun isForFreeList!223_arg_0_2 (I_isForFreeList!223) List!1685)
(declare-sort I_eliminateForLoopsList!215 0)
(declare-fun eliminateForLoopsList!215_arg_0_3 (I_eliminateForLoopsList!215) List!1685)
(declare-sort I_eliminateForLoops!217 0)
(declare-fun eliminateForLoops!217_arg_0_4 (I_eliminateForLoops!217) Statement!1624)
(assert (forall ((?i I_isForFree!225)) (and (= (isForFree!225 (isForFree!225_arg_0_1 ?i)) (ite ((_ is Block!1628) (isForFree!225_arg_0_1 ?i)) (isForFreeList!223 (body!1629 (isForFree!225_arg_0_1 ?i))) (ite ((_ is IfThenElse!1635) (isForFree!225_arg_0_1 ?i)) (and (isForFree!225 (elze!1638 (isForFree!225_arg_0_1 ?i))) (isForFree!225 (then!1637 (isForFree!225_arg_0_1 ?i)))) (ite ((_ is While!1643) (isForFree!225_arg_0_1 ?i)) (isForFree!225 (body!1645 (isForFree!225_arg_0_1 ?i))) (not ((_ is For!1630) (isForFree!225_arg_0_1 ?i))))))) (ite ((_ is Block!1628) (isForFree!225_arg_0_1 ?i)) (not (forall ((?z I_isForFreeList!223)) (not (= (isForFreeList!223_arg_0_2 ?z) (body!1629 (isForFree!225_arg_0_1 ?i)))) )) (ite ((_ is IfThenElse!1635) (isForFree!225_arg_0_1 ?i)) (and (not (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (elze!1638 (isForFree!225_arg_0_1 ?i)))) )) (not (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (then!1637 (isForFree!225_arg_0_1 ?i)))) ))) (ite ((_ is While!1643) (isForFree!225_arg_0_1 ?i)) (not (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (body!1645 (isForFree!225_arg_0_1 ?i)))) )) true)))) ))
(assert (forall ((?i I_isForFreeList!223)) (and (= (isForFreeList!223 (isForFreeList!223_arg_0_2 ?i)) (ite ((_ is Nil!1689) (isForFreeList!223_arg_0_2 ?i)) true (ite ((_ is Cons!1686) (isForFreeList!223_arg_0_2 ?i)) (and (isForFreeList!223 (tail!1688 (isForFreeList!223_arg_0_2 ?i))) (isForFree!225 (head!1687 (isForFreeList!223_arg_0_2 ?i)))) error_value!1690))) (ite ((_ is Nil!1689) (isForFreeList!223_arg_0_2 ?i)) true (ite ((_ is Cons!1686) (isForFreeList!223_arg_0_2 ?i)) (and (not (forall ((?z I_isForFreeList!223)) (not (= (isForFreeList!223_arg_0_2 ?z) (tail!1688 (isForFreeList!223_arg_0_2 ?i)))) )) (not (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (head!1687 (isForFreeList!223_arg_0_2 ?i)))) ))) true))) ))
(assert (forall ((?i I_eliminateForLoopsList!215)) (and (= (eliminateForLoopsList!215 (eliminateForLoopsList!215_arg_0_3 ?i)) (ite ((_ is Nil!1689) (eliminateForLoopsList!215_arg_0_3 ?i)) Nil!1689 (ite ((_ is Cons!1686) (eliminateForLoopsList!215_arg_0_3 ?i)) (Cons!1686 (eliminateForLoops!217 (head!1687 (eliminateForLoopsList!215_arg_0_3 ?i))) (eliminateForLoopsList!215 (tail!1688 (eliminateForLoopsList!215_arg_0_3 ?i)))) error_value!1691))) (ite ((_ is Nil!1689) (eliminateForLoopsList!215_arg_0_3 ?i)) true (ite ((_ is Cons!1686) (eliminateForLoopsList!215_arg_0_3 ?i)) (and (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (head!1687 (eliminateForLoopsList!215_arg_0_3 ?i)))) )) (not (forall ((?z I_eliminateForLoopsList!215)) (not (= (eliminateForLoopsList!215_arg_0_3 ?z) (tail!1688 (eliminateForLoopsList!215_arg_0_3 ?i)))) ))) true))) ))
(assert (forall ((?i I_eliminateForLoops!217)) (and (= (eliminateForLoops!217 (eliminateForLoops!217_arg_0_4 ?i)) (ite ((_ is Block!1628) (eliminateForLoops!217_arg_0_4 ?i)) (Block!1628 (eliminateForLoopsList!215 (body!1629 (eliminateForLoops!217_arg_0_4 ?i)))) (ite ((_ is IfThenElse!1635) (eliminateForLoops!217_arg_0_4 ?i)) (IfThenElse!1635 (expr!1636 (eliminateForLoops!217_arg_0_4 ?i)) (eliminateForLoops!217 (then!1637 (eliminateForLoops!217_arg_0_4 ?i))) (eliminateForLoops!217 (elze!1638 (eliminateForLoops!217_arg_0_4 ?i)))) (ite ((_ is While!1643) (eliminateForLoops!217_arg_0_4 ?i)) (While!1643 (expr!1644 (eliminateForLoops!217_arg_0_4 ?i)) (eliminateForLoops!217 (body!1645 (eliminateForLoops!217_arg_0_4 ?i)))) (ite ((_ is For!1630) (eliminateForLoops!217_arg_0_4 ?i)) (Block!1628 (Cons!1686 (eliminateForLoops!217 (init!1631 (eliminateForLoops!217_arg_0_4 ?i))) (Cons!1686 (While!1643 (expr!1632 (eliminateForLoops!217_arg_0_4 ?i)) (Block!1628 (Cons!1686 (eliminateForLoops!217 (body!1634 (eliminateForLoops!217_arg_0_4 ?i))) (Cons!1686 (eliminateForLoops!217 (step!1633 (eliminateForLoops!217_arg_0_4 ?i))) Nil!1689)))) Nil!1689))) (eliminateForLoops!217_arg_0_4 ?i)))))) (ite ((_ is Block!1628) (eliminateForLoops!217_arg_0_4 ?i)) (not (forall ((?z I_eliminateForLoopsList!215)) (not (= (eliminateForLoopsList!215_arg_0_3 ?z) (body!1629 (eliminateForLoops!217_arg_0_4 ?i)))) )) (ite ((_ is IfThenElse!1635) (eliminateForLoops!217_arg_0_4 ?i)) (and (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (then!1637 (eliminateForLoops!217_arg_0_4 ?i)))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (elze!1638 (eliminateForLoops!217_arg_0_4 ?i)))) ))) (ite ((_ is While!1643) (eliminateForLoops!217_arg_0_4 ?i)) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (body!1645 (eliminateForLoops!217_arg_0_4 ?i)))) )) (ite ((_ is For!1630) (eliminateForLoops!217_arg_0_4 ?i)) (and (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (init!1631 (eliminateForLoops!217_arg_0_4 ?i)))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (body!1634 (eliminateForLoops!217_arg_0_4 ?i)))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (step!1633 (eliminateForLoops!217_arg_0_4 ?i)))) ))) true))))) ))
(assert (not (forall ((BOUND_VARIABLE_817 Expression!1646) (BOUND_VARIABLE_818 Statement!1624) (BOUND_VARIABLE_1064 Expression!1646) (BOUND_VARIABLE_1065 Statement!1624)) (or (not (and (isForFree!225 (ite ((_ is Block!1628) BOUND_VARIABLE_818) (Block!1628 (eliminateForLoopsList!215 (body!1629 BOUND_VARIABLE_818))) (ite ((_ is IfThenElse!1635) BOUND_VARIABLE_818) (IfThenElse!1635 (expr!1636 BOUND_VARIABLE_818) (eliminateForLoops!217 (then!1637 BOUND_VARIABLE_818)) (eliminateForLoops!217 (elze!1638 BOUND_VARIABLE_818))) (ite ((_ is While!1643) BOUND_VARIABLE_818) (While!1643 (expr!1644 BOUND_VARIABLE_818) (eliminateForLoops!217 (body!1645 BOUND_VARIABLE_818))) (ite ((_ is For!1630) BOUND_VARIABLE_818) (Block!1628 (Cons!1686 (eliminateForLoops!217 (init!1631 BOUND_VARIABLE_818)) (Cons!1686 (While!1643 (expr!1632 BOUND_VARIABLE_818) (Block!1628 (Cons!1686 (eliminateForLoops!217 (body!1634 BOUND_VARIABLE_818)) (Cons!1686 (eliminateForLoops!217 (step!1633 BOUND_VARIABLE_818)) Nil!1689)))) Nil!1689))) BOUND_VARIABLE_818))))) (not (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (ite ((_ is Block!1628) BOUND_VARIABLE_818) (Block!1628 (eliminateForLoopsList!215 (body!1629 BOUND_VARIABLE_818))) (ite ((_ is IfThenElse!1635) BOUND_VARIABLE_818) (IfThenElse!1635 (expr!1636 BOUND_VARIABLE_818) (eliminateForLoops!217 (then!1637 BOUND_VARIABLE_818)) (eliminateForLoops!217 (elze!1638 BOUND_VARIABLE_818))) (ite ((_ is While!1643) BOUND_VARIABLE_818) (While!1643 (expr!1644 BOUND_VARIABLE_818) (eliminateForLoops!217 (body!1645 BOUND_VARIABLE_818))) (ite ((_ is For!1630) BOUND_VARIABLE_818) (Block!1628 (Cons!1686 (eliminateForLoops!217 (init!1631 BOUND_VARIABLE_818)) (Cons!1686 (While!1643 (expr!1632 BOUND_VARIABLE_818) (Block!1628 (Cons!1686 (eliminateForLoops!217 (body!1634 BOUND_VARIABLE_818)) (Cons!1686 (eliminateForLoops!217 (step!1633 BOUND_VARIABLE_818)) Nil!1689)))) Nil!1689))) BOUND_VARIABLE_818)))))) )) (ite ((_ is Block!1628) BOUND_VARIABLE_818) (not (forall ((?z I_eliminateForLoopsList!215)) (not (= (eliminateForLoopsList!215_arg_0_3 ?z) (body!1629 BOUND_VARIABLE_818))) )) (ite ((_ is IfThenElse!1635) BOUND_VARIABLE_818) (and (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (then!1637 BOUND_VARIABLE_818))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (elze!1638 BOUND_VARIABLE_818))) ))) (ite ((_ is While!1643) BOUND_VARIABLE_818) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (body!1645 BOUND_VARIABLE_818))) )) (ite ((_ is For!1630) BOUND_VARIABLE_818) (and (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (init!1631 BOUND_VARIABLE_818))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (body!1634 BOUND_VARIABLE_818))) )) (not (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (step!1633 BOUND_VARIABLE_818))) ))) true)))))) (or (isForFree!225 (IfThenElse!1635 BOUND_VARIABLE_817 (eliminateForLoops!217 BOUND_VARIABLE_818) (eliminateForLoops!217 (While!1643 BOUND_VARIABLE_1064 BOUND_VARIABLE_1065)))) (forall ((?z I_isForFree!225)) (not (= (isForFree!225_arg_0_1 ?z) (IfThenElse!1635 BOUND_VARIABLE_817 (eliminateForLoops!217 BOUND_VARIABLE_818) (eliminateForLoops!217 (While!1643 BOUND_VARIABLE_1064 BOUND_VARIABLE_1065))))) ) (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) BOUND_VARIABLE_818)) ) (forall ((?z I_eliminateForLoops!217)) (not (= (eliminateForLoops!217_arg_0_4 ?z) (While!1643 BOUND_VARIABLE_1064 BOUND_VARIABLE_1065))) ))) )))
(check-sat)
(exit)

