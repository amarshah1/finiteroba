(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-sort T!208 0)
(declare-datatypes ((List!947 0)) (((Cons!948 (h!949 T!208) (t!950 List!947)) (Nil!951))
))
(declare-fun error_value!982 () List!947)
(declare-fun error_value!988 () Int)
(declare-fun List$map!963 (List!947 (Array T!208 T!208)) List!947)
(declare-fun List$$colon$colon!964 (List!947 T!208) List!947)
(declare-fun List$size!965 (List!947) Int)
(declare-fun error_value!1000 () List!947)
(assert (forall (($this!952 List!947) (f!953 (Array T!208 T!208))) (= (List$map!963 $this!952 f!953) (ite ((_ is Nil!951) $this!952) Nil!951 (ite ((_ is Cons!948) $this!952) (List$$colon$colon!964 (List$map!963 (t!950 $this!952) f!953) (select f!953 (h!949 $this!952))) error_value!982))) ))
(assert (forall (($this!958 List!947) (t!959 T!208)) (= (List$$colon$colon!964 $this!958 t!959) (Cons!948 t!959 $this!958)) ))
(assert (forall (($this!960 List!947)) (= (List$size!965 $this!960) (ite ((_ is Nil!951) $this!960) (- 0) (ite ((_ is Cons!948) $this!960) (+ 1 (List$size!965 (t!950 $this!960))) error_value!988))) ))
(assert (not (forall ((l!209 List!947) (f!210 (Array T!208 T!208))) (= (List$map!963 l!209 f!210) (ite ((_ is Cons!948) l!209) (Cons!948 (h!949 l!209) error_value!1000) (ite ((_ is Nil!951) l!209) Nil!951 (List$map!963 (t!950 l!209) f!210)))) )))
(check-sat)
(exit)

