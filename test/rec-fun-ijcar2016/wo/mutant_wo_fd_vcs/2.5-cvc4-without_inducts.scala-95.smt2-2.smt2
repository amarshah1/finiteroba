(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!2424 0)) (((succ!2425 (pred!2426 Nat!2424)) (zero!2427))
))
(declare-datatypes ((Lst!2428 0)) (((cons!2429 (head!2430 Nat!2424) (tail!2431 Lst!2428)) (nil!2432))
))
(declare-fun error_value!2433 () Bool)
(declare-fun less!231 (Nat!2424 Nat!2424) Bool)
(declare-fun error_value!2434 () Nat!2424)
(declare-fun len!254 (Lst!2428) Nat!2424)
(declare-fun error_value!2435 () Nat!2424)
(declare-fun last!265 (Lst!2428) Nat!2424)
(declare-fun error_value!2436 () Lst!2428)
(declare-fun drop!257 (Nat!2424 Lst!2428) Lst!2428)
(assert (forall ((x!229 Nat!2424) (y!230 Nat!2424)) (= (less!231 x!229 y!230) (ite ((_ is zero!2427) y!230) false (ite (and (and ((_ is zero!2427) x!229) ((_ is zero!2427) x!229)) ((_ is succ!2425) y!230)) true (ite (and (and ((_ is succ!2425) x!229) ((_ is succ!2425) x!229)) ((_ is succ!2425) y!230)) (less!231 (pred!2426 x!229) (pred!2426 y!230)) error_value!2433)))) ))
(assert (forall ((l!253 Lst!2428)) (= (len!254 l!253) (ite ((_ is nil!2432) l!253) zero!2427 (ite ((_ is cons!2429) l!253) (succ!2425 (len!254 (tail!2431 l!253))) error_value!2434))) ))
(assert (forall ((l!264 Lst!2428)) (= (last!265 l!264) (ite ((_ is nil!2432) l!264) zero!2427 (ite ((_ is cons!2429) l!264) (ite (= (tail!2431 l!264) nil!2432) (head!2430 l!264) (last!265 (tail!2431 l!264))) error_value!2435))) ))
(assert (forall ((n!255 Nat!2424) (l!256 Lst!2428)) (= (drop!257 n!255 l!256) (ite ((_ is nil!2432) l!256) nil!2432 (ite ((_ is zero!2427) n!255) l!256 (ite (and (and ((_ is succ!2425) n!255) ((_ is succ!2425) n!255)) ((_ is cons!2429) l!256)) (drop!257 (pred!2426 n!255) (tail!2431 l!256)) error_value!2436)))) ))
(assert (not (forall ((n!486 Nat!2424) (xs!487 Lst!2428)) (or (= (last!265 (drop!257 n!486 xs!487)) (last!265 xs!487)) (not (less!231 (len!254 xs!487) n!486))) )))
(check-sat)
(exit)

