(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Lst!2392 0)(Nat!2397 0)) (((cons!2393 (head!2394 Nat!2397) (tail!2395 Lst!2392)) (nil!2396))
((succ!2398 (pred!2399 Nat!2397)) (zero!2400))
))
(declare-fun error_value!2401 () Nat!2397)
(declare-fun last!265 (Lst!2392) Nat!2397)
(declare-fun error_value!2402 () Lst!2392)
(declare-fun append!252 (Lst!2392 Lst!2392) Lst!2392)
(assert (forall ((l!264 Lst!2392)) (= (last!265 l!264) (ite ((_ is nil!2396) l!264) zero!2400 (ite ((_ is cons!2393) l!264) (ite (= (tail!2395 l!264) nil!2396) (head!2394 l!264) (last!265 (tail!2395 l!264))) error_value!2401))) ))
(assert (forall ((l1!250 Lst!2392) (l2!251 Lst!2392)) (= (append!252 l1!250 l2!251) (ite ((_ is nil!2396) l1!250) l2!251 (ite ((_ is cons!2393) l1!250) (cons!2393 (head!2394 l1!250) (append!252 (tail!2395 l1!250) l2!251)) error_value!2402))) ))
(assert (not (forall ((ys!478 Lst!2392) (xs!477 Lst!2392)) (or (= (last!265 ys!478) (last!265 (append!252 xs!477 ys!478))) (= ys!478 nil!2396)) )))
(check-sat)
(exit)

