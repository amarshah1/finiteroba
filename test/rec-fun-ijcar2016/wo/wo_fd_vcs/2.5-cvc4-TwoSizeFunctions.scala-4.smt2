(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!894 0)) (((Cons!895 (head!896 (_ BitVec 32)) (tail!897 List!894)) (Nil!898))
))
(declare-fun error_value!899 () Int)
(declare-fun error_value!900 () Int)
(declare-fun size2acc!211 (List!894 Int) Int)
(declare-fun size1!206 (List!894) Int)
(declare-fun error_value!901 () Int)
(assert (forall ((l!209 List!894) (acc!210 Int)) (= (size2acc!211 l!209 acc!210) (ite ((_ is Nil!898) l!209) acc!210 (ite ((_ is Cons!895) l!209) (size2acc!211 (tail!897 l!209) (+ acc!210 1)) error_value!899))) ))
(assert (forall ((l!205 List!894)) (= (size1!206 l!205) (ite ((_ is Cons!895) l!205) (+ (size1!206 (tail!897 l!205)) 1) (ite ((_ is Nil!898) l!205) (- 0) error_value!900))) ))
(assert (exists ((acc!210 Int) (l!209 List!894)) (not (=> (>= acc!210 (- 0)) (= (ite ((_ is Nil!898) l!209) acc!210 (ite ((_ is Cons!895) l!209) (size2acc!211 (tail!897 l!209) (+ acc!210 1)) error_value!901)) (+ (size1!206 l!209) acc!210)))) ))
(check-sat)
(exit)

