(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((bdecs!7264 0)(typ!7116 0)(binds!7231 0)(decs_hasnt!7158 0)(decs!7125 0)(bdecs_has!7268 0)(exp!7241 0)(ctx!7107 0)(dec!7130 0)(decs_has!7149 0)(subdec!7166 0)(subtyp!7184 0)(subdecs!7090 0)(has!7223 0)(label_fld!7142 0)(avar!7113 0)) (((bdecs_bot!7265) (bdecs_decs!7266 (ds!7267 decs!7125)))
((typ_bind!7117 (z!7118 avar!7113) (ds!7119 decs!7125)) (typ_bot!7120) (typ_sel!7121 (p!7122 avar!7113) (L!7123 label_fld!7142)) (typ_top!7124))
((binds_hit!7232 (x!7233 avar!7113) (t!7234 typ!7116) (g!7235 ctx!7107)) (binds_skip!7236 (x!7237 avar!7113) (t!7238 typ!7116) (g!7239 ctx!7107) (bi!7240 binds!7231)))
((decs_hasnt_cons!7159 (ds!7160 decs!7125) (l!7161 label_fld!7142) (hasnt!7162 decs_hasnt!7158)) (decs_hasnt_nil!7163 (ds!7164 decs!7125) (l!7165 label_fld!7142)))
((decs_cons!7126 (head!7127 dec!7130) (tail!7128 decs!7125)) (decs_nil!7129))
((bdecs_has_decs!7269 (ds!7270 bdecs!7264) (d!7271 dec!7130) (has!7272 decs_has!7149)) (bdecs_has_fld!7273 (ds!7274 bdecs!7264) (d!7275 dec!7130)) (bdecs_has_mtd!7276 (ds!7277 bdecs!7264) (d!7278 dec!7130)) (bdecs_has_typ!7279 (ds!7280 bdecs!7264) (d!7281 dec!7130)))
((exp_bind!7242 (g!7243 ctx!7107) (t!7244 typ!7116) (z!7245 avar!7113) (ds!7246 bdecs!7264)) (exp_bot!7247 (g!7248 ctx!7107) (t!7249 typ!7116) (z!7250 avar!7113) (ds!7251 bdecs!7264)) (exp_sel!7252 (g!7253 ctx!7107) (t!7254 typ!7116) (z!7255 avar!7113) (ds!7256 bdecs!7264) (ha!7257 has!7223) (ex!7258 exp!7241)) (exp_top!7259 (g!7260 ctx!7107) (t!7261 typ!7116) (z!7262 avar!7113) (ds!7263 bdecs!7264)))
((ctx_cons!7108 (tail!7109 ctx!7107) (x!7110 avar!7113) (t!7111 typ!7116)) (ctx_nil!7112))
((dec_fld!7131 (l!7132 label_fld!7142) (T!7133 typ!7116)) (dec_mtd!7134 (m!7135 label_fld!7142) (Arg!7136 typ!7116) (Ret!7137 typ!7116)) (dec_typ!7138 (L!7139 label_fld!7142) (Lo!7140 typ!7116) (Hi!7141 typ!7116)))
((decs_has_hit!7150 (ds!7151 decs!7125) (d!7152 dec!7130) (hasnt!7153 decs_hasnt!7158)) (decs_has_skip!7154 (ds!7155 decs!7125) (d!7156 dec!7130) (has!7157 decs_has!7149)))
((subdec_fld!7167 (g!7168 ctx!7107) (d1!7169 dec!7130) (d2!7170 dec!7130) (st!7171 subtyp!7184)) (subdec_mtd!7172 (g!7173 ctx!7107) (d1!7174 dec!7130) (d2!7175 dec!7130) (starg!7176 subtyp!7184) (stret!7177 subtyp!7184)) (subdec_typ!7178 (g!7179 ctx!7107) (d1!7180 dec!7130) (d2!7181 dec!7130) (stlo!7182 subtyp!7184) (sthi!7183 subtyp!7184)))
((subtyp_bind!7185 (g!7186 ctx!7107) (t1!7187 typ!7116) (t2!7188 typ!7116) (z!7189 avar!7113) (sds!7190 subdecs!7090)) (subtyp_bot!7191 (g!7192 ctx!7107) (t1!7193 typ!7116) (t2!7194 typ!7116)) (subtyp_refl!7195 (g!7196 ctx!7107) (t1!7197 typ!7116) (t2!7198 typ!7116)) (subtyp_sel_l!7199 (g!7200 ctx!7107) (t1!7201 typ!7116) (t2!7202 typ!7116) (ha!7203 has!7223) (st1!7204 subtyp!7184) (st2!7205 subtyp!7184)) (subtyp_sel_r!7206 (g!7207 ctx!7107) (t1!7208 typ!7116) (t2!7209 typ!7116) (ha!7210 has!7223) (st1!7211 subtyp!7184) (st2!7212 subtyp!7184)) (subtyp_top!7213 (g!7214 ctx!7107) (t1!7215 typ!7116) (t2!7216 typ!7116)) (subtyp_trans!7217 (g!7218 ctx!7107) (t1!7219 typ!7116) (t2!7220 typ!7116) (st1!7221 subtyp!7184) (st2!7222 subtyp!7184)))
((subdecs_cons!7091 (g!7092 ctx!7107) (ds1!7093 decs!7125) (ds2!7094 decs!7125) (ds1has!7095 decs_has!7149) (sd!7096 subdec!7166) (sds!7097 subdecs!7090) (ds2hasnt!7098 decs_hasnt!7158)) (subdecs_nil!7099 (g!7100 ctx!7107) (ds1!7101 decs!7125) (ds2!7102 decs!7125)) (subdecs_refl!7103 (g!7104 ctx!7107) (ds1!7105 decs!7125) (ds2!7106 decs!7125)))
((has_var!7224 (g!7225 ctx!7107) (p!7226 avar!7113) (d!7227 dec!7130) (bi!7228 binds!7231) (ex!7229 exp!7241) (bhas!7230 bdecs_has!7268)))
((label_fld!7143 (n!7144 Int)) (label_mtd!7145 (n!7146 Int)) (label_typ!7147 (n!7148 Int)))
((avar_f!7114 (n!7115 Int)))
))
(declare-fun error_value!7282 () Bool)
(declare-fun error_value!7283 () Bool)
(declare-fun error_value!7284 () Bool)
(declare-fun error_value!7285 () typ!7116)
(declare-fun error_value!7286 () Bool)
(declare-fun error_value!7287 () dec!7130)
(declare-fun error_value!7288 () decs!7125)
(declare-fun error_value!7289 () bdecs!7264)
(declare-fun error_value!7290 () Bool)
(declare-fun error_value!7291 () label_fld!7142)
(declare-fun error_value!7292 () typ!7116)
(declare-fun error_value!7293 () dec!7130)
(declare-fun error_value!7294 () Bool)
(declare-fun error_value!7295 () decs!7125)
(declare-fun error_value!7296 () avar!7113)
(declare-fun error_value!7297 () ctx!7107)
(declare-fun error_value!7298 () ctx!7107)
(declare-fun error_value!7299 () avar!7113)
(declare-fun error_value!7300 () label_fld!7142)
(declare-fun error_value!7301 () decs!7125)
(declare-fun error_value!7302 () dec!7130)
(declare-fun error_value!7303 () ctx!7107)
(declare-fun error_value!7304 () Bool)
(declare-fun error_value!7305 () Bool)
(declare-fun error_value!7306 () typ!7116)
(declare-fun error_value!7307 () Bool)
(declare-fun error_value!7308 () decs!7125)
(declare-fun error_value!7309 () avar!7113)
(declare-fun error_value!7310 () ctx!7107)
(declare-fun error_value!7311 () dec!7130)
(declare-fun error_value!7312 () dec!7130)
(declare-fun error_value!7313 () bdecs!7264)
(declare-fun error_value!7314 () ctx!7107)
(declare-fun error_value!7315 () dec!7130)
(declare-fun error_value!7316 () typ!7116)
(declare-fun error_value!7317 () ctx!7107)
(declare-fun decs_hasnt$ok!1532 (decs_hasnt!7158) Bool)
(declare-fun has$ok!1562 (has!7223) Bool)
(declare-fun binds$ok!1526 (binds!7231) Bool)
(declare-fun subtyp$typ2!1568 (subtyp!7184) typ!7116)
(declare-fun subdec$ok!1578 (subdec!7166) Bool)
(declare-fun has$dec!1560 (has!7223) dec!7130)
(declare-fun decs_has$decs!1534 (decs_has!7149) decs!7125)
(declare-fun exp$bdecs!1552 (exp!7241) bdecs!7264)
(declare-fun exp$ok!1554 (exp!7241) Bool)
(declare-fun dec$label!1510 (dec!7130) label_fld!7142)
(declare-fun subtyp$typ1!1566 (subtyp!7184) typ!7116)
(declare-fun dec$subst!1512 (dec!7130 avar!7113 avar!7113) dec!7130)
(declare-fun bdecs_has$ok!1544 (bdecs_has!7268) Bool)
(declare-fun subdecs$decs1!1582 (subdecs!7090) decs!7125)
(declare-fun binds$avar!1520 (binds!7231) avar!7113)
(declare-fun subdecs$ctx!1580 (subdecs!7090) ctx!7107)
(declare-fun has$ctx!1556 (has!7223) ctx!7107)
(declare-fun has$avar!1558 (has!7223) avar!7113)
(declare-fun decs_hasnt$label!1530 (decs_hasnt!7158) label_fld!7142)
(declare-fun subdecs$decs2!1584 (subdecs!7090) decs!7125)
(declare-fun decs_has$dec!1536 (decs_has!7149) dec!7130)
(declare-fun subtyp$ctx!1564 (subtyp!7184) ctx!7107)
(declare-fun subtyp$ok!1570 (subtyp!7184) Bool)
(declare-fun subdecs$ok!1586 (subdecs!7090) Bool)
(declare-fun binds$typ!1522 (binds!7231) typ!7116)
(declare-fun decs_has$ok!1538 (decs_has!7149) Bool)
(declare-fun decs_hasnt$decs!1528 (decs_hasnt!7158) decs!7125)
(declare-fun decs$subst!1516 (decs!7125 avar!7113 avar!7113) decs!7125)
(declare-fun exp$avar!1550 (exp!7241) avar!7113)
(declare-fun exp$ctx!1546 (exp!7241) ctx!7107)
(declare-fun bdecs_has$dec!1542 (bdecs_has!7268) dec!7130)
(declare-fun subdec$dec2!1576 (subdec!7166) dec!7130)
(declare-fun bdecs_has$bdecs!1540 (bdecs_has!7268) bdecs!7264)
(declare-fun typ$subst!1506 (typ!7116 avar!7113 avar!7113) typ!7116)
(declare-fun binds$ctx!1524 (binds!7231) ctx!7107)
(declare-fun subdec$dec1!1574 (subdec!7166) dec!7130)
(declare-fun exp$typ!1548 (exp!7241) typ!7116)
(declare-fun subdec$ctx!1572 (subdec!7166) ctx!7107)
(assert (forall (($this!1533 decs_hasnt!7158)) (= (decs_hasnt$ok!1532 $this!1533) (ite ((_ is decs_hasnt_nil!7163) $this!1533) (= (ds!7164 $this!1533) decs_nil!7129) (ite ((_ is decs_hasnt_cons!7159) $this!1533) false error_value!7282))) ))
(assert (forall (($this!1563 has!7223)) (= (has$ok!1562 $this!1563) (ite ((_ is has_var!7224) $this!1563) (and (and (and (and (and (and (and (and (and (and (binds$ok!1526 (bi!7228 $this!1563)) (binds$ok!1526 (bi!7228 $this!1563))) (= (binds$avar!1520 (bi!7228 $this!1563)) (p!7226 $this!1563))) (= (binds$typ!1522 (bi!7228 $this!1563)) (exp$typ!1548 (ex!7229 $this!1563)))) (= (binds$ctx!1524 (bi!7228 $this!1563)) (g!7225 $this!1563))) (exp$ok!1554 (ex!7229 $this!1563))) (= (exp$ctx!1546 (ex!7229 $this!1563)) (g!7225 $this!1563))) (= (exp$avar!1550 (ex!7229 $this!1563)) (p!7226 $this!1563))) (= (exp$bdecs!1552 (ex!7229 $this!1563)) (bdecs_has$bdecs!1540 (bhas!7230 $this!1563)))) (bdecs_has$ok!1544 (bhas!7230 $this!1563))) (= (bdecs_has$dec!1542 (bhas!7230 $this!1563)) (d!7227 $this!1563))) error_value!7283)) ))
(assert (forall (($this!1527 binds!7231)) (= (binds$ok!1526 $this!1527) (ite ((_ is binds_hit!7232) $this!1527) false (ite ((_ is binds_skip!7236) $this!1527) (and (and (and (and (binds$ok!1526 (bi!7240 $this!1527)) (binds$ok!1526 (bi!7240 $this!1527))) (= (binds$avar!1520 (bi!7240 $this!1527)) (x!7237 $this!1527))) (= (binds$typ!1522 (bi!7240 $this!1527)) (t!7238 $this!1527))) (= (binds$ctx!1524 (bi!7240 $this!1527)) (g!7239 $this!1527))) error_value!7284))) ))
(assert (forall (($this!1569 subtyp!7184)) (= (subtyp$typ2!1568 $this!1569) (ite ((_ is subtyp_refl!7195) $this!1569) (t2!7198 $this!1569) (ite ((_ is subtyp_top!7213) $this!1569) (t2!7216 $this!1569) (ite ((_ is subtyp_bot!7191) $this!1569) (t2!7194 $this!1569) (ite ((_ is subtyp_bind!7185) $this!1569) (t2!7188 $this!1569) (ite ((_ is subtyp_sel_l!7199) $this!1569) (t2!7202 $this!1569) (ite ((_ is subtyp_sel_r!7206) $this!1569) (t2!7209 $this!1569) (ite ((_ is subtyp_trans!7217) $this!1569) (t2!7220 $this!1569) error_value!7285)))))))) ))
(assert (forall (($this!1579 subdec!7166)) (= (subdec$ok!1578 $this!1579) (ite ((_ is subdec_typ!7178) $this!1579) (ite ((_ is dec_typ!7138) (d1!7180 $this!1579)) (ite ((_ is dec_typ!7138) (d2!7181 $this!1579)) (and (and (and (and (and (and (and (and (and (= (L!7139 (d1!7180 $this!1579)) (L!7139 (d2!7181 $this!1579))) (= (L!7139 (d1!7180 $this!1579)) (L!7139 (d2!7181 $this!1579)))) (subtyp$ok!1570 (stlo!7182 $this!1579))) (= (subtyp$ctx!1564 (stlo!7182 $this!1579)) (g!7179 $this!1579))) (= (subtyp$typ1!1566 (stlo!7182 $this!1579)) (Lo!7140 (d2!7181 $this!1579)))) (= (subtyp$typ2!1568 (stlo!7182 $this!1579)) (Lo!7140 (d1!7180 $this!1579)))) (subtyp$ok!1570 (sthi!7183 $this!1579))) (= (subtyp$ctx!1564 (sthi!7183 $this!1579)) (g!7179 $this!1579))) (= (subtyp$typ1!1566 (sthi!7183 $this!1579)) (Hi!7141 (d1!7180 $this!1579)))) (= (subtyp$typ2!1568 (sthi!7183 $this!1579)) (Hi!7141 (d2!7181 $this!1579)))) false) false) (ite ((_ is subdec_fld!7167) $this!1579) (ite ((_ is dec_fld!7131) (d1!7169 $this!1579)) (ite ((_ is dec_fld!7131) (d2!7170 $this!1579)) (and (and (and (and (and (= (l!7132 (d1!7169 $this!1579)) (l!7132 (d2!7170 $this!1579))) (= (l!7132 (d1!7169 $this!1579)) (l!7132 (d2!7170 $this!1579)))) (subtyp$ok!1570 (st!7171 $this!1579))) (= (subtyp$ctx!1564 (st!7171 $this!1579)) (g!7168 $this!1579))) (= (subtyp$typ1!1566 (st!7171 $this!1579)) (T!7133 (d1!7169 $this!1579)))) (= (subtyp$typ2!1568 (st!7171 $this!1579)) (T!7133 (d2!7170 $this!1579)))) false) false) (ite ((_ is subdec_mtd!7172) $this!1579) (ite ((_ is dec_mtd!7134) (d1!7174 $this!1579)) (ite ((_ is dec_mtd!7134) (d2!7175 $this!1579)) (and (and (and (and (and (and (and (and (and (= (m!7135 (d1!7174 $this!1579)) (m!7135 (d2!7175 $this!1579))) (= (m!7135 (d1!7174 $this!1579)) (m!7135 (d2!7175 $this!1579)))) (subtyp$ok!1570 (starg!7176 $this!1579))) (= (subtyp$ctx!1564 (starg!7176 $this!1579)) (g!7173 $this!1579))) (= (subtyp$typ1!1566 (starg!7176 $this!1579)) (Arg!7136 (d2!7175 $this!1579)))) (= (subtyp$typ2!1568 (starg!7176 $this!1579)) (Arg!7136 (d1!7174 $this!1579)))) (subtyp$ok!1570 (stret!7177 $this!1579))) (= (subtyp$ctx!1564 (stret!7177 $this!1579)) (g!7173 $this!1579))) (= (subtyp$typ1!1566 (stret!7177 $this!1579)) (Ret!7137 (d1!7174 $this!1579)))) (= (subtyp$typ2!1568 (stret!7177 $this!1579)) (Ret!7137 (d2!7175 $this!1579)))) false) false) error_value!7286)))) ))
(assert (forall (($this!1561 has!7223)) (= (has$dec!1560 $this!1561) (ite ((_ is has_var!7224) $this!1561) (d!7227 $this!1561) error_value!7287)) ))
(assert (forall (($this!1535 decs_has!7149)) (= (decs_has$decs!1534 $this!1535) (ite ((_ is decs_has_hit!7150) $this!1535) (ds!7151 $this!1535) (ite ((_ is decs_has_skip!7154) $this!1535) (ds!7155 $this!1535) error_value!7288))) ))
(assert (forall (($this!1553 exp!7241)) (= (exp$bdecs!1552 $this!1553) (ite ((_ is exp_top!7259) $this!1553) (ds!7263 $this!1553) (ite ((_ is exp_bot!7247) $this!1553) (ds!7251 $this!1553) (ite ((_ is exp_bind!7242) $this!1553) (ds!7246 $this!1553) (ite ((_ is exp_sel!7252) $this!1553) (ds!7256 $this!1553) error_value!7289))))) ))
(assert (forall (($this!1555 exp!7241)) (= (exp$ok!1554 $this!1555) (ite ((_ is exp_top!7259) $this!1555) (and (and (= (t!7261 $this!1555) typ_top!7124) (= (t!7261 $this!1555) typ_top!7124)) (= (ds!7263 $this!1555) (bdecs_decs!7266 decs_nil!7129))) (ite ((_ is exp_bot!7247) $this!1555) (and (and (= (t!7249 $this!1555) typ_bot!7120) (= (t!7249 $this!1555) typ_bot!7120)) (= (ds!7251 $this!1555) bdecs_bot!7265)) (ite ((_ is exp_bind!7242) $this!1555) (ite ((_ is typ_bind!7117) (t!7244 $this!1555)) (ite ((_ is bdecs_decs!7266) (ds!7246 $this!1555)) (= (decs$subst!1516 (ds!7119 (t!7244 $this!1555)) (z!7118 (t!7244 $this!1555)) (z!7245 $this!1555)) (ds!7267 (ds!7246 $this!1555))) false) false) (ite ((_ is exp_sel!7252) $this!1555) (ite ((_ is typ_sel!7121) (t!7254 $this!1555)) (and (and (and (and (and (and (and (and (has$ok!1562 (ha!7257 $this!1555)) (has$ok!1562 (ha!7257 $this!1555))) (= (has$ctx!1556 (ha!7257 $this!1555)) (g!7253 $this!1555))) (= (has$avar!1558 (ha!7257 $this!1555)) (p!7122 (t!7254 $this!1555)))) (= (dec$label!1510 (has$dec!1560 (ha!7257 $this!1555))) (L!7123 (t!7254 $this!1555)))) (= (exp$ctx!1546 (ex!7258 $this!1555)) (g!7253 $this!1555))) (ite ((_ is dec_typ!7138) (has$dec!1560 (ha!7257 $this!1555))) (= (Hi!7141 (has$dec!1560 (ha!7257 $this!1555))) (exp$typ!1548 (ex!7258 $this!1555))) false)) (= (exp$avar!1550 (ex!7258 $this!1555)) (z!7255 $this!1555))) (= (exp$bdecs!1552 (ex!7258 $this!1555)) (ds!7256 $this!1555))) false) error_value!7290))))) ))
(assert (forall (($this!1511 dec!7130)) (= (dec$label!1510 $this!1511) (ite ((_ is dec_typ!7138) $this!1511) (L!7139 $this!1511) (ite ((_ is dec_fld!7131) $this!1511) (l!7132 $this!1511) (ite ((_ is dec_mtd!7134) $this!1511) (m!7135 $this!1511) error_value!7291)))) ))
(assert (forall (($this!1567 subtyp!7184)) (= (subtyp$typ1!1566 $this!1567) (ite ((_ is subtyp_refl!7195) $this!1567) (t1!7197 $this!1567) (ite ((_ is subtyp_top!7213) $this!1567) (t1!7215 $this!1567) (ite ((_ is subtyp_bot!7191) $this!1567) (t1!7193 $this!1567) (ite ((_ is subtyp_bind!7185) $this!1567) (t1!7187 $this!1567) (ite ((_ is subtyp_sel_l!7199) $this!1567) (t1!7201 $this!1567) (ite ((_ is subtyp_sel_r!7206) $this!1567) (t1!7208 $this!1567) (ite ((_ is subtyp_trans!7217) $this!1567) (t1!7219 $this!1567) error_value!7292)))))))) ))
(assert (forall (($this!1515 dec!7130) (x!1513 avar!7113) (y!1514 avar!7113)) (= (dec$subst!1512 $this!1515 x!1513 y!1514) (ite ((_ is dec_typ!7138) $this!1515) (dec_typ!7138 (L!7139 $this!1515) (typ$subst!1506 (Lo!7140 $this!1515) x!1513 y!1514) (typ$subst!1506 (Hi!7141 $this!1515) x!1513 y!1514)) (ite ((_ is dec_fld!7131) $this!1515) (dec_fld!7131 (l!7132 $this!1515) (typ$subst!1506 (T!7133 $this!1515) x!1513 y!1514)) (ite ((_ is dec_mtd!7134) $this!1515) (dec_mtd!7134 (m!7135 $this!1515) (typ$subst!1506 (Arg!7136 $this!1515) x!1513 y!1514) (typ$subst!1506 (Ret!7137 $this!1515) x!1513 y!1514)) error_value!7293)))) ))
(assert (forall (($this!1545 bdecs_has!7268)) (= (bdecs_has$ok!1544 $this!1545) (ite ((_ is bdecs_has_decs!7269) $this!1545) (ite ((_ is bdecs_decs!7266) (ds!7270 $this!1545)) (and (and (and (decs_has$ok!1538 (has!7272 $this!1545)) (decs_has$ok!1538 (has!7272 $this!1545))) (= (decs_has$decs!1534 (has!7272 $this!1545)) (ds!7267 (ds!7270 $this!1545)))) (= (decs_has$dec!1536 (has!7272 $this!1545)) (d!7271 $this!1545))) false) (ite ((_ is bdecs_has_typ!7279) $this!1545) (ite ((_ is dec_typ!7138) (d!7281 $this!1545)) (and (and (and (= (Lo!7140 (d!7281 $this!1545)) typ_top!7124) (= (Lo!7140 (d!7281 $this!1545)) typ_top!7124)) (= (Hi!7141 (d!7281 $this!1545)) typ_bot!7120)) (= (ds!7280 $this!1545) bdecs_bot!7265)) false) (ite ((_ is bdecs_has_fld!7273) $this!1545) (ite ((_ is dec_fld!7131) (d!7275 $this!1545)) (and (and (= (T!7133 (d!7275 $this!1545)) typ_top!7124) (= (T!7133 (d!7275 $this!1545)) typ_top!7124)) (= (ds!7274 $this!1545) bdecs_bot!7265)) false) (ite ((_ is bdecs_has_mtd!7276) $this!1545) (ite ((_ is dec_mtd!7134) (d!7278 $this!1545)) (and (and (and (= (Arg!7136 (d!7278 $this!1545)) typ_top!7124) (= (Arg!7136 (d!7278 $this!1545)) typ_top!7124)) (= (Ret!7137 (d!7278 $this!1545)) typ_bot!7120)) (= (ds!7277 $this!1545) bdecs_bot!7265)) false) error_value!7294))))) ))
(assert (forall (($this!1583 subdecs!7090)) (= (subdecs$decs1!1582 $this!1583) (ite ((_ is subdecs_nil!7099) $this!1583) (ds1!7101 $this!1583) (ite ((_ is subdecs_cons!7091) $this!1583) (ds1!7093 $this!1583) (ite ((_ is subdecs_refl!7103) $this!1583) (ds1!7105 $this!1583) error_value!7295)))) ))
(assert (forall (($this!1521 binds!7231)) (= (binds$avar!1520 $this!1521) (ite ((_ is binds_hit!7232) $this!1521) (x!7233 $this!1521) (ite ((_ is binds_skip!7236) $this!1521) (x!7237 $this!1521) error_value!7296))) ))
(assert (forall (($this!1581 subdecs!7090)) (= (subdecs$ctx!1580 $this!1581) (ite ((_ is subdecs_nil!7099) $this!1581) (g!7100 $this!1581) (ite ((_ is subdecs_cons!7091) $this!1581) (g!7092 $this!1581) (ite ((_ is subdecs_refl!7103) $this!1581) (g!7104 $this!1581) error_value!7297)))) ))
(assert (forall (($this!1557 has!7223)) (= (has$ctx!1556 $this!1557) (ite ((_ is has_var!7224) $this!1557) (g!7225 $this!1557) error_value!7298)) ))
(assert (forall (($this!1559 has!7223)) (= (has$avar!1558 $this!1559) (ite ((_ is has_var!7224) $this!1559) (p!7226 $this!1559) error_value!7299)) ))
(assert (forall (($this!1531 decs_hasnt!7158)) (= (decs_hasnt$label!1530 $this!1531) (ite ((_ is decs_hasnt_nil!7163) $this!1531) (l!7165 $this!1531) (ite ((_ is decs_hasnt_cons!7159) $this!1531) (l!7161 $this!1531) error_value!7300))) ))
(assert (forall (($this!1585 subdecs!7090)) (= (subdecs$decs2!1584 $this!1585) (ite ((_ is subdecs_nil!7099) $this!1585) (ds2!7102 $this!1585) (ite ((_ is subdecs_cons!7091) $this!1585) (ds2!7094 $this!1585) (ite ((_ is subdecs_refl!7103) $this!1585) (ds2!7106 $this!1585) error_value!7301)))) ))
(assert (forall (($this!1537 decs_has!7149)) (= (decs_has$dec!1536 $this!1537) (ite ((_ is decs_has_hit!7150) $this!1537) (d!7152 $this!1537) (ite ((_ is decs_has_skip!7154) $this!1537) (d!7156 $this!1537) error_value!7302))) ))
(assert (forall (($this!1565 subtyp!7184)) (= (subtyp$ctx!1564 $this!1565) (ite ((_ is subtyp_refl!7195) $this!1565) (g!7196 $this!1565) (ite ((_ is subtyp_top!7213) $this!1565) (g!7214 $this!1565) (ite ((_ is subtyp_bot!7191) $this!1565) (g!7192 $this!1565) (ite ((_ is subtyp_bind!7185) $this!1565) (g!7186 $this!1565) (ite ((_ is subtyp_sel_l!7199) $this!1565) (g!7200 $this!1565) (ite ((_ is subtyp_sel_r!7206) $this!1565) (g!7207 $this!1565) (ite ((_ is subtyp_trans!7217) $this!1565) (g!7218 $this!1565) error_value!7303)))))))) ))
(assert (forall (($this!1571 subtyp!7184)) (= (subtyp$ok!1570 $this!1571) (ite ((_ is subtyp_refl!7195) $this!1571) (= (t1!7197 $this!1571) (t2!7198 $this!1571)) (ite ((_ is subtyp_top!7213) $this!1571) (= (t2!7216 $this!1571) typ_top!7124) (ite ((_ is subtyp_bot!7191) $this!1571) (= (t1!7193 $this!1571) typ_bot!7120) (ite ((_ is subtyp_bind!7185) $this!1571) (ite ((_ is typ_bind!7117) (t1!7187 $this!1571)) (ite ((_ is typ_bind!7117) (t2!7188 $this!1571)) (and (and (and (and (subdecs$ok!1586 (sds!7190 $this!1571)) (subdecs$ok!1586 (sds!7190 $this!1571))) (= (subdecs$ctx!1580 (sds!7190 $this!1571)) (ctx_cons!7108 (g!7186 $this!1571) (z!7189 $this!1571) (typ_bind!7117 (z!7189 $this!1571) (ds!7119 (t1!7187 $this!1571)))))) (= (subdecs$decs1!1582 (sds!7190 $this!1571)) (decs$subst!1516 (ds!7119 (t1!7187 $this!1571)) (z!7118 (t1!7187 $this!1571)) (z!7189 $this!1571)))) (= (subdecs$decs2!1584 (sds!7190 $this!1571)) (decs$subst!1516 (ds!7119 (t2!7188 $this!1571)) (z!7118 (t2!7188 $this!1571)) (z!7189 $this!1571)))) false) false) (ite ((_ is subtyp_sel_l!7199) $this!1571) (ite ((_ is typ_sel!7121) (t1!7201 $this!1571)) (ite ((_ is dec_typ!7138) (has$dec!1560 (ha!7203 $this!1571))) (and (and (and (and (and (and (and (and (and (and (and (and (= (L!7139 (has$dec!1560 (ha!7203 $this!1571))) (L!7123 (t1!7201 $this!1571))) (= (L!7139 (has$dec!1560 (ha!7203 $this!1571))) (L!7123 (t1!7201 $this!1571)))) (has$ok!1562 (ha!7203 $this!1571))) (= (has$ctx!1556 (ha!7203 $this!1571)) (g!7200 $this!1571))) (= (has$avar!1558 (ha!7203 $this!1571)) (p!7122 (t1!7201 $this!1571)))) (subtyp$ok!1570 (st1!7204 $this!1571))) (= (subtyp$ctx!1564 (st1!7204 $this!1571)) (g!7200 $this!1571))) (= (subtyp$typ1!1566 (st1!7204 $this!1571)) (Lo!7140 (has$dec!1560 (ha!7203 $this!1571))))) (= (subtyp$typ2!1568 (st1!7204 $this!1571)) (Hi!7141 (has$dec!1560 (ha!7203 $this!1571))))) (subtyp$ok!1570 (st2!7205 $this!1571))) (= (subtyp$ctx!1564 (st2!7205 $this!1571)) (g!7200 $this!1571))) (= (subtyp$typ1!1566 (st2!7205 $this!1571)) (Hi!7141 (has$dec!1560 (ha!7203 $this!1571))))) (= (subtyp$typ2!1568 (st2!7205 $this!1571)) (t2!7202 $this!1571))) false) false) (ite ((_ is subtyp_sel_r!7206) $this!1571) (ite ((_ is typ_sel!7121) (t2!7209 $this!1571)) (ite ((_ is dec_typ!7138) (has$dec!1560 (ha!7210 $this!1571))) (and (and (and (and (and (and (and (and (and (and (and (and (= (L!7139 (has$dec!1560 (ha!7210 $this!1571))) (L!7123 (t2!7209 $this!1571))) (= (L!7139 (has$dec!1560 (ha!7210 $this!1571))) (L!7123 (t2!7209 $this!1571)))) (has$ok!1562 (ha!7210 $this!1571))) (= (has$ctx!1556 (ha!7210 $this!1571)) (g!7207 $this!1571))) (= (has$avar!1558 (ha!7210 $this!1571)) (p!7122 (t2!7209 $this!1571)))) (subtyp$ok!1570 (st1!7211 $this!1571))) (= (subtyp$ctx!1564 (st1!7211 $this!1571)) (g!7207 $this!1571))) (= (subtyp$typ1!1566 (st1!7211 $this!1571)) (t1!7208 $this!1571))) (= (subtyp$typ2!1568 (st2!7212 $this!1571)) (Lo!7140 (has$dec!1560 (ha!7210 $this!1571))))) (subtyp$ok!1570 (st2!7212 $this!1571))) (= (subtyp$ctx!1564 (st2!7212 $this!1571)) (g!7207 $this!1571))) (= (subtyp$typ1!1566 (st2!7212 $this!1571)) (Lo!7140 (has$dec!1560 (ha!7210 $this!1571))))) (= (subtyp$typ2!1568 (st2!7212 $this!1571)) (Hi!7141 (has$dec!1560 (ha!7210 $this!1571))))) false) false) (ite ((_ is subtyp_trans!7217) $this!1571) (and (and (and (and (and (and (and (subtyp$ok!1570 (st1!7221 $this!1571)) (subtyp$ok!1570 (st1!7221 $this!1571))) (= (subtyp$ctx!1564 (st1!7221 $this!1571)) (g!7218 $this!1571))) (= (subtyp$typ1!1566 (st1!7221 $this!1571)) (t1!7219 $this!1571))) (= (subtyp$typ2!1568 (st1!7221 $this!1571)) (subtyp$typ1!1566 (st2!7222 $this!1571)))) (subtyp$ok!1570 (st2!7222 $this!1571))) (= (subtyp$ctx!1564 (st2!7222 $this!1571)) (g!7218 $this!1571))) (= (subtyp$typ2!1568 (st2!7222 $this!1571)) (t2!7220 $this!1571))) error_value!7304)))))))) ))
(assert (forall (($this!1587 subdecs!7090)) (= (subdecs$ok!1586 $this!1587) (ite ((_ is subdecs_nil!7099) $this!1587) (= (ds2!7102 $this!1587) decs_nil!7129) (ite ((_ is subdecs_cons!7091) $this!1587) false (ite ((_ is subdecs_refl!7103) $this!1587) (= (ds1!7105 $this!1587) (ds2!7106 $this!1587)) error_value!7305)))) ))
(assert (forall (($this!1523 binds!7231)) (= (binds$typ!1522 $this!1523) (ite ((_ is binds_hit!7232) $this!1523) (t!7234 $this!1523) (ite ((_ is binds_skip!7236) $this!1523) (t!7238 $this!1523) error_value!7306))) ))
(assert (forall (($this!1539 decs_has!7149)) (= (decs_has$ok!1538 $this!1539) (ite ((_ is decs_has_hit!7150) $this!1539) false (ite ((_ is decs_has_skip!7154) $this!1539) false error_value!7307))) ))
(assert (forall (($this!1529 decs_hasnt!7158)) (= (decs_hasnt$decs!1528 $this!1529) (ite ((_ is decs_hasnt_nil!7163) $this!1529) (ds!7164 $this!1529) (ite ((_ is decs_hasnt_cons!7159) $this!1529) (ds!7160 $this!1529) error_value!7308))) ))
(assert (forall (($this!1519 decs!7125) (x!1517 avar!7113) (y!1518 avar!7113)) (= (decs$subst!1516 $this!1519 x!1517 y!1518) $this!1519) ))
(assert (forall (($this!1551 exp!7241)) (= (exp$avar!1550 $this!1551) (ite ((_ is exp_top!7259) $this!1551) (z!7262 $this!1551) (ite ((_ is exp_bot!7247) $this!1551) (z!7250 $this!1551) (ite ((_ is exp_bind!7242) $this!1551) (z!7245 $this!1551) (ite ((_ is exp_sel!7252) $this!1551) (z!7255 $this!1551) error_value!7309))))) ))
(assert (forall (($this!1547 exp!7241)) (= (exp$ctx!1546 $this!1547) (ite ((_ is exp_top!7259) $this!1547) (g!7260 $this!1547) (ite ((_ is exp_bot!7247) $this!1547) (g!7248 $this!1547) (ite ((_ is exp_bind!7242) $this!1547) (g!7243 $this!1547) (ite ((_ is exp_sel!7252) $this!1547) (g!7253 $this!1547) error_value!7310))))) ))
(assert (forall (($this!1543 bdecs_has!7268)) (= (bdecs_has$dec!1542 $this!1543) (ite ((_ is bdecs_has_decs!7269) $this!1543) (d!7271 $this!1543) (ite ((_ is bdecs_has_typ!7279) $this!1543) (d!7281 $this!1543) (ite ((_ is bdecs_has_fld!7273) $this!1543) (d!7275 $this!1543) (ite ((_ is bdecs_has_mtd!7276) $this!1543) (d!7278 $this!1543) error_value!7311))))) ))
(assert (forall (($this!1577 subdec!7166)) (= (subdec$dec2!1576 $this!1577) (ite ((_ is subdec_typ!7178) $this!1577) (d2!7181 $this!1577) (ite ((_ is subdec_fld!7167) $this!1577) (d2!7170 $this!1577) (ite ((_ is subdec_mtd!7172) $this!1577) (d2!7175 $this!1577) error_value!7312)))) ))
(assert (forall (($this!1541 bdecs_has!7268)) (= (bdecs_has$bdecs!1540 $this!1541) (ite ((_ is bdecs_has_decs!7269) $this!1541) (ds!7270 $this!1541) (ite ((_ is bdecs_has_typ!7279) $this!1541) (ds!7280 $this!1541) (ite ((_ is bdecs_has_fld!7273) $this!1541) (ds!7274 $this!1541) (ite ((_ is bdecs_has_mtd!7276) $this!1541) (ds!7277 $this!1541) error_value!7313))))) ))
(assert (forall (($this!1509 typ!7116) (x!1507 avar!7113) (y!1508 avar!7113)) (= (typ$subst!1506 $this!1509 x!1507 y!1508) $this!1509) ))
(assert (forall (($this!1525 binds!7231)) (= (binds$ctx!1524 $this!1525) (ite ((_ is binds_hit!7232) $this!1525) (g!7235 $this!1525) (ite ((_ is binds_skip!7236) $this!1525) (g!7239 $this!1525) error_value!7314))) ))
(assert (forall (($this!1575 subdec!7166)) (= (subdec$dec1!1574 $this!1575) (ite ((_ is subdec_typ!7178) $this!1575) (d1!7180 $this!1575) (ite ((_ is subdec_fld!7167) $this!1575) (d1!7169 $this!1575) (ite ((_ is subdec_mtd!7172) $this!1575) (d1!7174 $this!1575) error_value!7315)))) ))
(assert (forall (($this!1549 exp!7241)) (= (exp$typ!1548 $this!1549) (ite ((_ is exp_top!7259) $this!1549) (t!7261 $this!1549) (ite ((_ is exp_bot!7247) $this!1549) (t!7249 $this!1549) (ite ((_ is exp_bind!7242) $this!1549) (t!7244 $this!1549) (ite ((_ is exp_sel!7252) $this!1549) (t!7254 $this!1549) error_value!7316))))) ))
(assert (forall (($this!1573 subdec!7166)) (= (subdec$ctx!1572 $this!1573) (ite ((_ is subdec_typ!7178) $this!1573) (g!7179 $this!1573) (ite ((_ is subdec_fld!7167) $this!1573) (g!7168 $this!1573) (ite ((_ is subdec_mtd!7172) $this!1573) (g!7173 $this!1573) error_value!7317)))) ))
(assert (exists ((sdsAB!247 subdecs!7090) (dsA!243 decs!7125) (sds12!248 subdecs!7090) (dsB!244 decs!7125) (ds1!245 decs!7125) (g!241 ctx!7107) (ds2!246 decs!7125) (z!242 avar!7113)) (not (=> (and (and (and (and (and (and (and (and (subdecs$ok!1586 sdsAB!247) (subdecs$ok!1586 sdsAB!247)) (= (subdecs$ctx!1580 sdsAB!247) (ctx_cons!7108 g!241 z!242 (typ_bind!7117 z!242 dsA!243)))) (= (subdecs$decs1!1582 sdsAB!247) dsA!243)) (= (subdecs$decs2!1584 sdsAB!247) dsB!244)) (subdecs$ok!1586 sds12!248)) (= (subdecs$ctx!1580 sds12!248) (ctx_cons!7108 g!241 z!242 (typ_bind!7117 z!242 dsB!244)))) (= (subdecs$decs1!1582 sds12!248) ds1!245)) (= (subdecs$decs2!1584 sds12!248) ds2!246)) (and (and (and (and (subdecs$ok!1586 sds12!248) (subdecs$ok!1586 sds12!248)) (= (subdecs$ctx!1580 sds12!248) (ctx_cons!7108 g!241 z!242 (typ_bind!7117 z!242 dsA!243)))) (= (subdecs$decs1!1582 sds12!248) ds1!245)) (= (subdecs$decs2!1584 sds12!248) ds2!246)))) ))
(check-sat)
(exit)

