(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!2360 0)) (((succ!2361 (pred!2362 Nat!2360)) (zero!2363))
))
(declare-datatypes ((Lst!2364 0)) (((cons!2365 (head!2366 Nat!2360) (tail!2367 Lst!2364)) (nil!2368))
))
(declare-datatypes ((ZLst!2369 0)(Pair!2374 0)) (((zcons!2370 (zhead!2371 Pair!2374) (ztail!2372 ZLst!2369)) (znil!2373))
((mkpair!2375 (first!2376 Nat!2360) (second!2377 Nat!2360)))
))
(declare-fun error_value!2378 () ZLst!2369)
(declare-fun zdrop!294 (Nat!2360 ZLst!2369) ZLst!2369)
(declare-fun error_value!2379 () ZLst!2369)
(declare-fun zip!288 (Lst!2364 Lst!2364) ZLst!2369)
(declare-fun error_value!2380 () Lst!2364)
(declare-fun drop!257 (Nat!2360 Lst!2364) Lst!2364)
(assert (forall ((n!292 Nat!2360) (l!293 ZLst!2369)) (= (zdrop!294 n!292 l!293) (ite ((_ is znil!2373) l!293) znil!2373 (ite ((_ is zero!2363) n!292) l!293 (ite (and (and ((_ is succ!2361) n!292) ((_ is succ!2361) n!292)) ((_ is zcons!2370) l!293)) (zdrop!294 (pred!2362 n!292) (ztail!2372 l!293)) error_value!2378)))) ))
(assert (forall ((l1!286 Lst!2364) (l2!287 Lst!2364)) (= (zip!288 l1!286 l2!287) (ite ((_ is nil!2368) l1!286) znil!2373 (ite ((_ is nil!2368) l2!287) znil!2373 (ite (and (and ((_ is cons!2365) l1!286) ((_ is cons!2365) l1!286)) ((_ is cons!2365) l2!287)) (zcons!2370 (mkpair!2375 (head!2366 l1!286) (head!2366 l2!287)) (zip!288 (tail!2367 l1!286) (tail!2367 l2!287))) error_value!2379)))) ))
(assert (forall ((n!255 Nat!2360) (l!256 Lst!2364)) (= (drop!257 n!255 l!256) (ite ((_ is nil!2368) l!256) nil!2368 (ite ((_ is zero!2363) n!255) l!256 (ite (and (and ((_ is succ!2361) n!255) ((_ is succ!2361) n!255)) ((_ is cons!2365) l!256)) (drop!257 (pred!2362 n!255) (tail!2367 l!256)) error_value!2380)))) ))
(assert (exists ((n!470 Nat!2360) (xs!471 Lst!2364) (ys!472 Lst!2364)) (not (= (zdrop!294 n!470 (zip!288 xs!471 ys!472)) (zip!288 (drop!257 n!470 xs!471) (drop!257 n!470 ys!472)))) ))
(check-sat)
(exit)

