(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!2300 0)) (((succ!2301 (pred!2302 Nat!2300)) (zero!2303))
))
(declare-datatypes ((Lst!2304 0)) (((cons!2305 (head!2306 Nat!2300) (tail!2307 Lst!2304)) (nil!2308))
))
(declare-fun error_value!2309 () Nat!2300)
(declare-fun count!263 (Nat!2300 Lst!2304) Nat!2300)
(declare-fun error_value!2310 () Lst!2304)
(declare-fun error_value!2311 () Lst!2304)
(declare-fun error_value!2312 () Bool)
(declare-fun sort!285 (Lst!2304) Lst!2304)
(declare-fun insort!281 (Nat!2300 Lst!2304) Lst!2304)
(declare-fun less!231 (Nat!2300 Nat!2300) Bool)
(assert (forall ((n!261 Nat!2300) (l!262 Lst!2304)) (= (count!263 n!261 l!262) (ite ((_ is nil!2308) l!262) zero!2303 (ite ((_ is cons!2305) l!262) (ite (= n!261 (head!2306 l!262)) (succ!2301 (count!263 n!261 (tail!2307 l!262))) (count!263 n!261 (tail!2307 l!262))) error_value!2309))) ))
(assert (forall ((l!284 Lst!2304)) (= (sort!285 l!284) (ite ((_ is nil!2308) l!284) nil!2308 (ite ((_ is cons!2305) l!284) (insort!281 (head!2306 l!284) (sort!285 (tail!2307 l!284))) error_value!2310))) ))
(assert (forall ((n!279 Nat!2300) (l!280 Lst!2304)) (= (insort!281 n!279 l!280) (ite ((_ is nil!2308) l!280) (cons!2305 n!279 nil!2308) (ite ((_ is cons!2305) l!280) (ite (less!231 n!279 (head!2306 l!280)) (cons!2305 n!279 (cons!2305 (head!2306 l!280) (tail!2307 l!280))) (cons!2305 (head!2306 l!280) (insort!281 n!279 (tail!2307 l!280)))) error_value!2311))) ))
(assert (forall ((x!229 Nat!2300) (y!230 Nat!2300)) (= (less!231 x!229 y!230) (ite ((_ is zero!2303) y!230) false (ite (and (and ((_ is zero!2303) x!229) ((_ is zero!2303) x!229)) ((_ is succ!2301) y!230)) true (ite (and (and ((_ is succ!2301) x!229) ((_ is succ!2301) x!229)) ((_ is succ!2301) y!230)) (less!231 (pred!2302 x!229) (pred!2302 y!230)) error_value!2312)))) ))
(assert (exists ((x!448 Nat!2300) (l!449 Lst!2304)) (not (= (count!263 x!448 l!449) (count!263 x!448 (sort!285 l!449)))) ))
(check-sat)
(exit)

